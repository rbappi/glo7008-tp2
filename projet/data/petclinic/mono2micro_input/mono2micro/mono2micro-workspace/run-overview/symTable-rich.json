{"MavenWrapperDownloader": {"classVar": {"WRAPPER_VERSION": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 187, "End": 209, "modifier": ["private", "static", "final"], "RawStr": "private static final String WRAPPER_VERSION = \"0.5.4\";"}, "DEFAULT_DOWNLOAD_URL": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 297, "End": 324, "modifier": ["private", "static", "final"], "RawStr": "/**\n     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n     */\n    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \" .jar\";"}, "MAVEN_WRAPPER_PROPERTIES_PATH": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 515, "End": 551, "modifier": ["private", "static", "final"], "RawStr": "/**\n     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n     * use instead of the default one.\n     */\n    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n            \".mvn/wrapper/maven-wrapper.properties\";"}, "MAVEN_WRAPPER_JAR_PATH": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 652, "End": 681, "modifier": ["private", "static", "final"], "RawStr": "/**\n     * Path where the maven-wrapper.jar will be saved to.\n     */\n    private static final String MAVEN_WRAPPER_JAR_PATH =\n            \".mvn/wrapper/maven-wrapper.jar\";"}, "PROPERTY_NAME_WRAPPER_URL": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 782, "End": 814, "modifier": ["private", "static", "final"], "RawStr": "/**\n     * Name of the property which should be used to override the default download url for the wrapper.\n     */\n    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";"}}, "funcL": {"main": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"args": {"Type": "String []", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [null], "arguments": null, "sub_type": null}}}, "Locals": {"baseDirectory": {"Var": "File", "CoreType": ["File"], "VarAST": {"name": "File", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 955, "End": 973, "RawStr": "File baseDirectory = new File(args[0]);"}, "mavenWrapperPropertyFile": {"Var": "File", "CoreType": ["File"], "VarAST": {"name": "File", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1166, "End": 1195, "RawStr": "// If the maven-wrapper.properties exists, read it and check if it contains a custom\n        // wrapperUrl parameter.\n        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);"}, "url": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1262, "End": 1272, "RawStr": "String url = DEFAULT_DOWNLOAD_URL;"}, "mavenWrapperPropertyFileInputStream": {"Var": "FileInputStream", "CoreType": ["FileInputStream"], "VarAST": {"name": "FileInputStream", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1357, "End": 1408, "RawStr": "FileInputStream mavenWrapperPropertyFileInputStream = null;"}, "mavenWrapperProperties": {"Var": "Properties", "CoreType": ["Properties"], "VarAST": {"name": "Properties", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1552, "End": 1585, "RawStr": "Properties mavenWrapperProperties = new Properties();"}, "outputFile": {"Var": "File", "CoreType": ["File"], "VarAST": {"name": "File", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2351, "End": 2366, "RawStr": "File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);"}}, "modifier": ["public", "static"], "header": "public static void main(String args[]) {", "rawEnd": 2207, "signature": "main(String)"}, "downloadFileFromURL": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {"urlString": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}, "destination": {"Type": "File", "CoreType": ["File"], "TypeAST": {"name": "File", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"rbc": {"Var": "ReadableByteChannel", "CoreType": ["ReadableByteChannel"], "VarAST": {"name": "ReadableByteChannel", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3850, "End": 3873, "RawStr": "ReadableByteChannel rbc;"}, "username": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3369, "End": 3384, "RawStr": "String username = System.getenv(\"MVNW_USERNAME\");"}, "password": {"Var": "char[]", "CoreType": ["char"], "VarAST": {"name": "char", "dimensions": [null]}, "Start": 3442, "End": 3457, "RawStr": "char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();"}, "website": {"Var": "URL", "CoreType": ["URL"], "VarAST": {"name": "URL", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3808, "End": 3819, "RawStr": "URL website = new URL(urlString);"}, "fos": {"Var": "FileOutputStream", "CoreType": ["FileOutputStream"], "VarAST": {"name": "FileOutputStream", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3940, "End": 3960, "RawStr": "FileOutputStream fos = new FileOutputStream(destination);"}}, "modifier": ["private", "static"], "header": "private static void downloadFileFromURL(String urlString, File destination) throws Exception {", "rawEnd": 826, "signature": "downloadFileFromURL(String,File)"}}, "file": "monolith/.mvn/wrapper/MavenWrapperDownloader.java", "super": null, "modifier": ["public"], "header": "public class MavenWrapperDownloader {", "rawEnd": 4185, "Enum": [], "FQCN": "MavenWrapperDownloader", "Jparser": "MavenWrapperDownloader", "funcSig": {"main(String)": "main", "downloadFileFromURL(String,File)": "downloadFileFromURL"}, "ClassType": "Class"}, "PetTypeFormatterTests": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 750, "End": 777, "modifier": ["private"], "RawStr": "@Mock\n    private ClinicService clinicService;"}, "petTypeFormatter": {"Var": "PetTypeFormatter", "CoreType": ["PetTypeFormatter"], "VarAST": {"name": "PetTypeFormatter", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 792, "End": 825, "modifier": ["private"], "RawStr": "private PetTypeFormatter petTypeFormatter;"}}, "funcL": {"setup": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@BeforeEach\n    void setup() {", "rawEnd": 70, "signature": "setup()"}, "testPrint": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"petType": {"Var": "PetType", "CoreType": ["PetType"], "VarAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 975, "End": 990, "RawStr": "PetType petType = new PetType();"}, "petTypeName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1069, "End": 1087, "RawStr": "String petTypeName = petTypeFormatter.print(petType, Locale.ENGLISH);"}}, "modifier": ["public"], "header": "@Test\n    void testPrint() {", "rawEnd": 207, "signature": "testPrint()"}, "shouldParse": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["ParseException"], "Args": {}, "Locals": {"petType": {"Var": "PetType", "CoreType": ["PetType"], "VarAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1353, "End": 1368, "RawStr": "PetType petType = petTypeFormatter.parse(\"Bird\", Locale.ENGLISH);"}}, "modifier": ["public"], "header": "@Test\n    void shouldParse() throws ParseException {", "rawEnd": 208, "signature": "shouldParse()"}, "shouldThrowParseException": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["ParseException"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void shouldThrowParseException() throws ParseException {", "rawEnd": 219, "signature": "shouldThrowParseException()"}, "makePetTypes": {"RetType": "Collection<PetType>", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"petTypes": {"Var": "Collection<PetType>", "CoreType": ["PetType"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1915, "End": 1943, "RawStr": "Collection<PetType> petTypes = new ArrayList<>();"}}, "modifier": ["private"], "header": "/**\n     * Helper method to produce some sample pet types just for test purpose\n     *\n     * @return {@link Collection} of {@link PetType}\n     */\n    private Collection<PetType> makePetTypes() {", "rawEnd": 306, "signature": "makePetTypes()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/web/PetTypeFormatterTests.java", "super": null, "modifier": ["private"], "header": "/**\n * Test class for {@link PetTypeFormatter}\n *\n * @author Colin But\n */\n@ExtendWith(MockitoExtension.class)\nclass PetTypeFormatterTests {", "rawEnd": 1515, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.PetTypeFormatterTests", "Jparser": "org.springframework.samples.petclinic.web.PetTypeFormatterTests", "funcSig": {"setup()": "setup", "testPrint()": "testPrint", "shouldParse()": "shouldParse", "shouldThrowParseException()": "shouldThrowParseException", "makePetTypes()": "makePetTypes"}, "ClassType": "Class"}, "VetControllerTests": {"classVar": {"vetController": {"Var": "VetController", "CoreType": ["VetController"], "VarAST": {"name": "VetController", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1112, "End": 1139, "modifier": ["private"], "RawStr": "@Autowired\n    private VetController vetController;"}, "clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1169, "End": 1196, "modifier": ["private"], "RawStr": "@Autowired\n    private ClinicService clinicService;"}, "mockMvc": {"Var": "MockMvc", "CoreType": ["MockMvc"], "VarAST": {"name": "MockMvc", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1211, "End": 1226, "modifier": ["private"], "RawStr": "private MockMvc mockMvc;"}}, "funcL": {"setup": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"james": {"Var": "Vet", "CoreType": ["Vet"], "VarAST": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1352, "End": 1361, "RawStr": "Vet james = new Vet();"}, "helen": {"Var": "Vet", "CoreType": ["Vet"], "VarAST": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1518, "End": 1527, "RawStr": "Vet helen = new Vet();"}, "radiology": {"Var": "Specialty", "CoreType": ["Specialty"], "VarAST": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1684, "End": 1703, "RawStr": "Specialty radiology = new Specialty();"}}, "modifier": ["public"], "header": "@BeforeEach\n    void setup() {", "rawEnd": 588, "signature": "setup()"}, "testShowVetListHtml": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testShowVetListHtml() throws Exception {", "rawEnd": 193, "signature": "testShowVetListHtml()"}, "testShowResourcesVetList": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {"actions": {"Var": "ResultActions", "CoreType": ["ResultActions"], "VarAST": {"name": "ResultActions", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2321, "End": 2342, "RawStr": "ResultActions actions = mockMvc.perform(get(\"/vets.json\").accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk());"}}, "modifier": ["public"], "header": "@Test\n    void testShowResourcesVetList() throws Exception {", "rawEnd": 288, "signature": "testShowResourcesVetList()"}, "testShowVetListXml": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testShowVetListXml() throws Exception {", "rawEnd": 273, "signature": "testShowVetListXml()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/web/VetControllerTests.java", "super": null, "modifier": ["private"], "header": "/**\n * Test class for the {@link VetController}\n */\n@SpringJUnitWebConfig(locations = {\"classpath:spring/mvc-core-config.xml\", \"classpath:spring/mvc-test-config.xml\"})\nclass VetControllerTests {", "rawEnd": 1712, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.VetControllerTests", "Jparser": "org.springframework.samples.petclinic.web.VetControllerTests", "funcSig": {"setup()": "setup", "testShowVetListHtml()": "testShowVetListHtml", "testShowResourcesVetList()": "testShowResourcesVetList", "testShowVetListXml()": "testShowVetListXml"}, "ClassType": "Class"}, "OwnerControllerTests": {"classVar": {"ownerController": {"Var": "OwnerController", "CoreType": ["OwnerController"], "VarAST": {"name": "OwnerController", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1129, "End": 1160, "modifier": ["private"], "RawStr": "@Autowired\n    private OwnerController ownerController;"}, "clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1190, "End": 1217, "modifier": ["private"], "RawStr": "@Autowired\n    private ClinicService clinicService;"}, "mockMvc": {"Var": "MockMvc", "CoreType": ["MockMvc"], "VarAST": {"name": "MockMvc", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1232, "End": 1247, "modifier": ["private"], "RawStr": "private MockMvc mockMvc;"}, "george": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1262, "End": 1274, "modifier": ["private"], "RawStr": "private Owner george;"}, "TEST_OWNER_ID": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 1078, "End": 1095, "modifier": ["private", "static", "final"], "RawStr": "private static final int TEST_OWNER_ID = 1;"}}, "funcL": {"setup": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@BeforeEach\n    void setup() {", "rawEnd": 445, "signature": "setup()"}, "testInitCreationForm": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testInitCreationForm() throws Exception {", "rawEnd": 218, "signature": "testInitCreationForm()"}, "testProcessCreationFormSuccess": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessCreationFormSuccess() throws Exception {", "rawEnd": 329, "signature": "testProcessCreationFormSuccess()"}, "testProcessCreationFormHasErrors": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessCreationFormHasErrors() throws Exception {", "rawEnd": 502, "signature": "testProcessCreationFormHasErrors()"}, "testInitFindForm": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testInitFindForm() throws Exception {", "rawEnd": 206, "signature": "testInitFindForm()"}, "testProcessFindFormSuccess": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessFindFormSuccess() throws Exception {", "rawEnd": 256, "signature": "testProcessFindFormSuccess()"}, "testProcessFindFormByLastName": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessFindFormByLastName() throws Exception {", "rawEnd": 341, "signature": "testProcessFindFormByLastName()"}, "testProcessFindFormNoOwnersFound": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessFindFormNoOwnersFound() throws Exception {", "rawEnd": 372, "signature": "testProcessFindFormNoOwnersFound()"}, "testInitUpdateOwnerForm": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testInitUpdateOwnerForm() throws Exception {", "rawEnd": 710, "signature": "testInitUpdateOwnerForm()"}, "testProcessUpdateOwnerFormSuccess": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessUpdateOwnerFormSuccess() throws Exception {", "rawEnd": 421, "signature": "testProcessUpdateOwnerFormSuccess()"}, "testProcessUpdateOwnerFormHasErrors": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessUpdateOwnerFormHasErrors() throws Exception {", "rawEnd": 528, "signature": "testProcessUpdateOwnerFormHasErrors()"}, "testShowOwner": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testShowOwner() throws Exception {", "rawEnd": 637, "signature": "testShowOwner()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/web/OwnerControllerTests.java", "super": null, "modifier": ["private"], "header": "/**\n * Test class for {@link OwnerController}\n *\n * @author Colin But\n */\n\n@SpringJUnitWebConfig(locations = {\"classpath:spring/mvc-test-config.xml\", \"classpath:spring/mvc-core-config.xml\"})\nclass OwnerControllerTests {", "rawEnd": 5979, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.OwnerControllerTests", "Jparser": "org.springframework.samples.petclinic.web.OwnerControllerTests", "funcSig": {"setup()": "setup", "testInitCreationForm()": "testInitCreationForm", "testProcessCreationFormSuccess()": "testProcessCreationFormSuccess", "testProcessCreationFormHasErrors()": "testProcessCreationFormHasErrors", "testInitFindForm()": "testInitFindForm", "testProcessFindFormSuccess()": "testProcessFindFormSuccess", "testProcessFindFormByLastName()": "testProcessFindFormByLastName", "testProcessFindFormNoOwnersFound()": "testProcessFindFormNoOwnersFound", "testInitUpdateOwnerForm()": "testInitUpdateOwnerForm", "testProcessUpdateOwnerFormSuccess()": "testProcessUpdateOwnerFormSuccess", "testProcessUpdateOwnerFormHasErrors()": "testProcessUpdateOwnerFormHasErrors", "testShowOwner()": "testShowOwner"}, "ClassType": "Class"}, "CrashControllerTests": {"classVar": {"crashController": {"Var": "CrashController", "CoreType": ["CrashController"], "VarAST": {"name": "CrashController", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 775, "End": 806, "modifier": ["private"], "RawStr": "@Autowired\n    private CrashController crashController;"}, "simpleMappingExceptionResolver": {"Var": "SimpleMappingExceptionResolver", "CoreType": ["SimpleMappingExceptionResolver"], "VarAST": {"name": "SimpleMappingExceptionResolver", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 836, "End": 897, "modifier": ["private"], "RawStr": "@Autowired\n    private SimpleMappingExceptionResolver simpleMappingExceptionResolver;"}, "mockMvc": {"Var": "MockMvc", "CoreType": ["MockMvc"], "VarAST": {"name": "MockMvc", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 912, "End": 927, "modifier": ["private"], "RawStr": "private MockMvc mockMvc;"}}, "funcL": {"setup": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@BeforeEach\n    void setup() {", "rawEnd": 187, "signature": "setup()"}, "testTriggerException": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testTriggerException() throws Exception {", "rawEnd": 245, "signature": "testTriggerException()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/web/CrashControllerTests.java", "super": null, "modifier": ["private"], "header": "/**\n * Test class for {@link CrashController}\n *\n * @author Colin But\n */\n@SpringJUnitWebConfig(locations = {\"classpath:spring/mvc-core-config.xml\", \"classpath:spring/mvc-test-config.xml\"})\nclass CrashControllerTests {", "rawEnd": 714, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.CrashControllerTests", "Jparser": "org.springframework.samples.petclinic.web.CrashControllerTests", "funcSig": {"setup()": "setup", "testTriggerException()": "testTriggerException"}, "ClassType": "Class"}, "PetControllerTests": {"classVar": {"petController": {"Var": "PetController", "CoreType": ["PetController"], "VarAST": {"name": "PetController", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1281, "End": 1308, "modifier": ["private"], "RawStr": "@Autowired\n    private PetController petController;"}, "formattingConversionServiceFactoryBean": {"Var": "FormattingConversionServiceFactoryBean", "CoreType": ["FormattingConversionServiceFactoryBean"], "VarAST": {"name": "FormattingConversionServiceFactoryBean", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1338, "End": 1415, "modifier": ["private"], "RawStr": "@Autowired\n    private FormattingConversionServiceFactoryBean formattingConversionServiceFactoryBean;"}, "clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1445, "End": 1472, "modifier": ["private"], "RawStr": "@Autowired\n    private ClinicService clinicService;"}, "mockMvc": {"Var": "MockMvc", "CoreType": ["MockMvc"], "VarAST": {"name": "MockMvc", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1487, "End": 1502, "modifier": ["private"], "RawStr": "private MockMvc mockMvc;"}, "TEST_OWNER_ID": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 1184, "End": 1201, "modifier": ["private", "static", "final"], "RawStr": "private static final int TEST_OWNER_ID = 1;"}, "TEST_PET_ID": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 1232, "End": 1247, "modifier": ["private", "static", "final"], "RawStr": "private static final int TEST_PET_ID = 1;"}}, "funcL": {"setup": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"cat": {"Var": "PetType", "CoreType": ["PetType"], "VarAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1740, "End": 1751, "RawStr": "PetType cat = new PetType();"}}, "modifier": ["public"], "header": "@BeforeEach\n    void setup() {", "rawEnd": 545, "signature": "setup()"}, "testInitCreationForm": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testInitCreationForm() throws Exception {", "rawEnd": 242, "signature": "testInitCreationForm()"}, "testProcessCreationFormSuccess": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessCreationFormSuccess() throws Exception {", "rawEnd": 329, "signature": "testProcessCreationFormSuccess()"}, "testProcessCreationFormHasErrors": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessCreationFormHasErrors() throws Exception {", "rawEnd": 421, "signature": "testProcessCreationFormHasErrors()"}, "testInitUpdateForm": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testInitUpdateForm() throws Exception {", "rawEnd": 264, "signature": "testInitUpdateForm()"}, "testProcessUpdateFormSuccess": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessUpdateFormSuccess() throws Exception {", "rawEnd": 351, "signature": "testProcessUpdateFormSuccess()"}, "testProcessUpdateFormHasErrors": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessUpdateFormHasErrors() throws Exception {", "rawEnd": 421, "signature": "testProcessUpdateFormHasErrors()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/web/PetControllerTests.java", "super": null, "modifier": ["private"], "header": "/**\n * Test class for the {@link PetController}\n *\n * @author Colin But\n */\n@SpringJUnitWebConfig(locations = {\"classpath:spring/mvc-core-config.xml\", \"classpath:spring/mvc-test-config.xml\"})\nclass PetControllerTests {", "rawEnd": 3368, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.PetControllerTests", "Jparser": "org.springframework.samples.petclinic.web.PetControllerTests", "funcSig": {"setup()": "setup", "testInitCreationForm()": "testInitCreationForm", "testProcessCreationFormSuccess()": "testProcessCreationFormSuccess", "testProcessCreationFormHasErrors()": "testProcessCreationFormHasErrors", "testInitUpdateForm()": "testInitUpdateForm", "testProcessUpdateFormSuccess()": "testProcessUpdateFormSuccess", "testProcessUpdateFormHasErrors()": "testProcessUpdateFormHasErrors"}, "ClassType": "Class"}, "VisitControllerTests": {"classVar": {"visitController": {"Var": "VisitController", "CoreType": ["VisitController"], "VarAST": {"name": "VisitController", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 999, "End": 1030, "modifier": ["private"], "RawStr": "@Autowired\n    private VisitController visitController;"}, "clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1060, "End": 1087, "modifier": ["private"], "RawStr": "@Autowired\n    private ClinicService clinicService;"}, "mockMvc": {"Var": "MockMvc", "CoreType": ["MockMvc"], "VarAST": {"name": "MockMvc", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1102, "End": 1117, "modifier": ["private"], "RawStr": "private MockMvc mockMvc;"}, "TEST_PET_ID": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 950, "End": 965, "modifier": ["private", "static", "final"], "RawStr": "private static final int TEST_PET_ID = 1;"}}, "funcL": {"setup": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@BeforeEach\n    void setup() {", "rawEnd": 170, "signature": "setup()"}, "testInitNewVisitForm": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testInitNewVisitForm() throws Exception {", "rawEnd": 194, "signature": "testInitNewVisitForm()"}, "testProcessNewVisitFormSuccess": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessNewVisitFormSuccess() throws Exception {", "rawEnd": 306, "signature": "testProcessNewVisitFormSuccess()"}, "testProcessNewVisitFormHasErrors": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testProcessNewVisitFormHasErrors() throws Exception {", "rawEnd": 301, "signature": "testProcessNewVisitFormHasErrors()"}, "testShowVisits": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Test\n    void testShowVisits() throws Exception {", "rawEnd": 229, "signature": "testShowVisits()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/web/VisitControllerTests.java", "super": null, "modifier": ["private"], "header": "/**\n * Test class for {@link VisitController}\n *\n * @author Colin But\n */\n@SpringJUnitWebConfig(locations = {\"classpath:spring/mvc-core-config.xml\", \"classpath:spring/mvc-test-config.xml\"})\nclass VisitControllerTests {", "rawEnd": 1699, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.VisitControllerTests", "Jparser": "org.springframework.samples.petclinic.web.VisitControllerTests", "funcSig": {"setup()": "setup", "testInitNewVisitForm()": "testInitNewVisitForm", "testProcessNewVisitFormSuccess()": "testProcessNewVisitFormSuccess", "testProcessNewVisitFormHasErrors()": "testProcessNewVisitFormHasErrors", "testShowVisits()": "testShowVisits"}, "ClassType": "Class"}, "ValidatorTests": {"classVar": {}, "funcL": {"createValidator": {"RetType": "Validator", "RetCoreType": ["Validator"], "RetTypeAST": {"name": "Validator", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"localValidatorFactoryBean": {"Var": "LocalValidatorFactoryBean", "CoreType": ["LocalValidatorFactoryBean"], "VarAST": {"name": "LocalValidatorFactoryBean", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 521, "End": 572, "RawStr": "LocalValidatorFactoryBean localValidatorFactoryBean = new LocalValidatorFactoryBean();"}}, "modifier": ["private"], "header": "private Validator createValidator() {", "rawEnd": 199, "signature": "createValidator()"}, "shouldNotValidateWhenFirstNameEmpty": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"person": {"Var": "Person", "CoreType": ["Person"], "VarAST": {"name": "Person", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 836, "End": 849, "RawStr": "Person person = new Person();"}, "validator": {"Var": "Validator", "CoreType": ["Validator"], "VarAST": {"name": "Validator", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 988, "End": 1007, "RawStr": "Validator validator = createValidator();"}, "constraintViolations": {"Var": "Set<ConstraintViolation<Person>>", "CoreType": ["Person"], "VarAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "ConstraintViolation", "dimensions": [], "arguments": [{"type": {"name": "Person", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1037, "End": 1090, "RawStr": "Set<ConstraintViolation<Person>> constraintViolations = validator.validate(person);"}, "violation": {"Var": "ConstraintViolation<Person>", "CoreType": ["Person"], "VarAST": {"name": "ConstraintViolation", "dimensions": [], "arguments": [{"type": {"name": "Person", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1192, "End": 1229, "RawStr": "ConstraintViolation<Person> violation = constraintViolations.iterator().next();"}}, "modifier": ["public"], "header": "@Test\n    void shouldNotValidateWhenFirstNameEmpty() {", "rawEnd": 621, "signature": "shouldNotValidateWhenFirstNameEmpty()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/model/ValidatorTests.java", "super": null, "modifier": ["private"], "header": "/**\n * @author Michael Isvy\n *         Simple test to make sure that Bean Validation is working\n *         (useful when upgrading to a new version of Hibernate Validator/ Bean Validation)\n */\nclass ValidatorTests {", "rawEnd": 926, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.ValidatorTests", "Jparser": "org.springframework.samples.petclinic.model.ValidatorTests", "funcSig": {"createValidator()": "createValidator", "shouldNotValidateWhenFirstNameEmpty()": "shouldNotValidateWhenFirstNameEmpty"}, "ClassType": "Class"}, "AbstractClinicServiceTests": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 880, "End": 907, "modifier": ["protected"], "RawStr": "@Autowired\n    protected ClinicService clinicService;"}}, "funcL": {"shouldFindOwnersByLastName": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"owners": {"Var": "Collection<Owner>", "CoreType": ["Owner"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 968, "End": 992, "RawStr": "Collection<Owner> owners = this.clinicService.findOwnerByLastName(\"Davis\");"}}, "modifier": ["public"], "header": "@Test\n    void shouldFindOwnersByLastName() {", "rawEnd": 253, "signature": "shouldFindOwnersByLastName()"}, "shouldFindSingleOwnerWithPet": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1311, "End": 1322, "RawStr": "Owner owner = this.clinicService.findOwnerById(1);"}}, "modifier": ["public"], "header": "@Test\n    void shouldFindSingleOwnerWithPet() {", "rawEnd": 333, "signature": "shouldFindSingleOwnerWithPet()"}, "shouldInsertOwner": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"found": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 1852, "End": 1861, "RawStr": "int found = owners.size();"}, "owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1888, "End": 1899, "RawStr": "Owner owner = new Owner();"}, "owners": {"Var": "Collection<Owner>", "CoreType": ["Owner"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1749, "End": 1773, "RawStr": "Collection<Owner> owners = this.clinicService.findOwnerByLastName(\"Schultz\");"}}, "modifier": ["public"], "header": "@Test\n    @Transactional\n    public void shouldInsertOwner() {", "rawEnd": 593, "signature": "shouldInsertOwner()"}, "shouldUpdateOwner": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2512, "End": 2523, "RawStr": "Owner owner = this.clinicService.findOwnerById(1);"}, "oldLastName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2571, "End": 2589, "RawStr": "String oldLastName = owner.getLastName();"}, "newLastName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2621, "End": 2639, "RawStr": "String newLastName = oldLastName + \"X\";"}}, "modifier": ["public"], "header": "@Test\n    @Transactional\n    void shouldUpdateOwner() {", "rawEnd": 412, "signature": "shouldUpdateOwner()"}, "shouldFindPetWithCorrectId": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"pet7": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2989, "End": 2997, "RawStr": "Pet pet7 = this.clinicService.findPetById(7);"}}, "modifier": ["public"], "header": "@Test\n    void shouldFindPetWithCorrectId() {", "rawEnd": 190, "signature": "shouldFindPetWithCorrectId()"}, "shouldFindAllPetTypes": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"petType1": {"Var": "PetType", "CoreType": ["PetType"], "VarAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3336, "End": 3352, "RawStr": "PetType petType1 = EntityUtils.getById(petTypes, PetType.class, 1);"}, "petType4": {"Var": "PetType", "CoreType": ["PetType"], "VarAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3490, "End": 3506, "RawStr": "PetType petType4 = EntityUtils.getById(petTypes, PetType.class, 4);"}, "petTypes": {"Var": "Collection<PetType>", "CoreType": ["PetType"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 3261, "End": 3289, "RawStr": "Collection<PetType> petTypes = this.clinicService.findPetTypes();"}}, "modifier": ["public"], "header": "@Test\n    void shouldFindAllPetTypes() {", "rawEnd": 349, "signature": "shouldFindAllPetTypes()"}, "shouldInsertPetIntoDatabaseAndGenerateId": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"owner6": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3741, "End": 3753, "RawStr": "Owner owner6 = this.clinicService.findOwnerById(6);"}, "found": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 3801, "End": 3810, "RawStr": "int found = owner6.getPets().size();"}, "pet": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3847, "End": 3854, "RawStr": "Pet pet = new Pet();"}, "types": {"Var": "Collection<PetType>", "CoreType": ["PetType"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 3925, "End": 3950, "RawStr": "Collection<PetType> types = this.clinicService.findPetTypes();"}}, "modifier": ["public"], "header": "@Test\n    @Transactional\n    public void shouldInsertPetIntoDatabaseAndGenerateId() {", "rawEnd": 746, "signature": "shouldInsertPetIntoDatabaseAndGenerateId()"}, "shouldUpdatePetName": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {"pet7": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 4583, "End": 4591, "RawStr": "Pet pet7 = this.clinicService.findPetById(7);"}, "oldName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 4637, "End": 4651, "RawStr": "String oldName = pet7.getName();"}, "newName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 4679, "End": 4693, "RawStr": "String newName = oldName + \"X\";"}}, "modifier": ["public"], "header": "@Test\n    @Transactional\n    public void shouldUpdatePetName() throws Exception {", "rawEnd": 321, "signature": "shouldUpdatePetName()"}, "shouldFindVets": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"vet": {"Var": "Vet", "CoreType": ["Vet"], "VarAST": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 5029, "End": 5036, "RawStr": "Vet vet = EntityUtils.getById(vets, Vet.class, 3);"}, "vets": {"Var": "Collection<Vet>", "CoreType": ["Vet"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 4966, "End": 4986, "RawStr": "Collection<Vet> vets = this.clinicService.findVets();"}}, "modifier": ["public"], "header": "@Test\n    void shouldFindVets() {", "rawEnd": 409, "signature": "shouldFindVets()"}, "shouldAddNewVisitForPet": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {"pet7": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 5498, "End": 5506, "RawStr": "Pet pet7 = this.clinicService.findPetById(7);"}, "found": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 5552, "End": 5561, "RawStr": "int found = pet7.getVisits().size();"}, "visit": {"Var": "Visit", "CoreType": ["Visit"], "VarAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 5597, "End": 5608, "RawStr": "Visit visit = new Visit();"}}, "modifier": ["public"], "header": "@Test\n    @Transactional\n    public void shouldAddNewVisitForPet() {", "rawEnd": 459, "signature": "shouldAddNewVisitForPet()"}, "shouldFindVisitsByPetId": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": ["Exception"], "Args": {}, "Locals": {"visitArr": {"Var": "Visit[]", "CoreType": ["Visit"], "VarAST": {"name": "Visit", "dimensions": [null], "arguments": null, "sub_type": null}, "Start": 6166, "End": 6182, "RawStr": "Visit[] visitArr = visits.toArray(new Visit[visits.size()]);"}, "visits": {"Var": "Collection<Visit>", "CoreType": ["Visit"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 6042, "End": 6066, "RawStr": "Collection<Visit> visits = this.clinicService.findVisitsByPetId(7);"}}, "modifier": ["public"], "header": "@Test\n    void shouldFindVisitsByPetId() throws Exception {", "rawEnd": 371, "signature": "shouldFindVisitsByPetId()"}}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/service/AbstractClinicServiceTests.java", "super": null, "modifier": ["abstract", "private"], "header": "/**\n * <p> Base class for {@link ClinicService} integration tests. </p> <p> Subclasses should specify Spring context\n * configuration using {@link ContextConfiguration @ContextConfiguration} annotation </p> <p>\n * AbstractclinicServiceTests and its subclasses benefit from the following services provided by the Spring\n * TestContext Framework: </p> <ul> <li><strong>Spring IoC container caching</strong> which spares us unnecessary set up\n * time between test execution.</li> <li><strong>Dependency Injection</strong> of test fixture instances, meaning that\n * we don't need to perform application context lookups. See the use of {@link Autowired @Autowired} on the <code>{@link\n * AbstractClinicServiceTests#clinicService clinicService}</code> instance variable, which uses autowiring <em>by\n * type</em>. <li><strong>Transaction management</strong>, meaning each test method is executed in its own transaction,\n * which is automatically rolled back by default. Thus, even if tests insert or otherwise change database state, there\n * is no need for a teardown or cleanup script. <li> An {@link org.springframework.context.ApplicationContext\n * ApplicationContext} is also inherited and can be used for explicit bean lookup if necessary. </li> </ul>\n *\n * @author Ken Krebs\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @author Sam Brannen\n * @author Michael Isvy\n */\nabstract class AbstractClinicServiceTests {", "rawEnd": 5185, "Enum": [], "FQCN": "org.springframework.samples.petclinic.service.AbstractClinicServiceTests", "Jparser": "org.springframework.samples.petclinic.service.AbstractClinicServiceTests", "funcSig": {"shouldFindOwnersByLastName()": "shouldFindOwnersByLastName", "shouldFindSingleOwnerWithPet()": "shouldFindSingleOwnerWithPet", "shouldInsertOwner()": "shouldInsertOwner", "shouldUpdateOwner()": "shouldUpdateOwner", "shouldFindPetWithCorrectId()": "shouldFindPetWithCorrectId", "shouldFindAllPetTypes()": "shouldFindAllPetTypes", "shouldInsertPetIntoDatabaseAndGenerateId()": "shouldInsertPetIntoDatabaseAndGenerateId", "shouldUpdatePetName()": "shouldUpdatePetName", "shouldFindVets()": "shouldFindVets", "shouldAddNewVisitForPet()": "shouldAddNewVisitForPet", "shouldFindVisitsByPetId()": "shouldFindVisitsByPetId"}, "ClassType": "Class"}, "ClinicServiceSpringDataJpaTests": {"classVar": {}, "funcL": {}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/service/ClinicServiceSpringDataJpaTests.java", "super": {"extends": {"ext_start": 348, "values": ["AbstractClinicServiceTests"], "CoreType": [["AbstractClinicServiceTests"]]}}, "modifier": ["private"], "header": "/**\n * <p> Integration test using the 'Spring Data' profile.\n *\n * @author Michael Isvy\n * @see AbstractClinicServiceTests AbstractClinicServiceTests for more details. </p>\n */\n\n@SpringJUnitConfig(locations = {\"classpath:spring/business-config.xml\"})\n@ActiveProfiles(\"spring-data-jpa\")\nclass ClinicServiceSpringDataJpaTests extends AbstractClinicServiceTests {", "rawEnd": 3, "Enum": [], "FQCN": "org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests", "Jparser": "org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests", "funcSig": {}, "ClassType": "Class"}, "ClinicServiceJpaTests": {"classVar": {}, "funcL": {}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/service/ClinicServiceJpaTests.java", "super": {"extends": {"ext_start": 338, "values": ["AbstractClinicServiceTests"], "CoreType": [["AbstractClinicServiceTests"]]}}, "modifier": ["private"], "header": "/**\n * <p> Integration test using the jpa profile.\n *\n * @author Rod Johnson\n * @author Sam Brannen\n * @author Michael Isvy\n * @see AbstractClinicServiceTests AbstractClinicServiceTests for more details. </p>\n */\n\n@SpringJUnitConfig(locations = {\"classpath:spring/business-config.xml\"})\n@ActiveProfiles(\"jpa\")\nclass ClinicServiceJpaTests extends AbstractClinicServiceTests {", "rawEnd": 3, "Enum": [], "FQCN": "org.springframework.samples.petclinic.service.ClinicServiceJpaTests", "Jparser": "org.springframework.samples.petclinic.service.ClinicServiceJpaTests", "funcSig": {}, "ClassType": "Class"}, "ClinicServiceJdbcTests": {"classVar": {}, "funcL": {}, "file": "monolith/src/test/java/org/springframework/samples/petclinic/service/ClinicServiceJdbcTests.java", "super": {"extends": {"ext_start": 501, "values": ["AbstractClinicServiceTests"], "CoreType": [["AbstractClinicServiceTests"]]}}, "modifier": ["private"], "header": "/**\n * <p> Integration test using the jdbc profile.\n *\n * @author Thomas Risberg\n * @author Michael Isvy\n * @see AbstractClinicServiceTests AbstractClinicServiceTests for more details. </p>\n */\n\n@SpringJUnitConfig(locations = {\"classpath:spring/business-config.xml\"})\n@ActiveProfiles(\"jdbc\")\nclass ClinicServiceJdbcTests extends AbstractClinicServiceTests {", "rawEnd": 4, "Enum": [], "FQCN": "org.springframework.samples.petclinic.service.ClinicServiceJdbcTests", "Jparser": "org.springframework.samples.petclinic.service.ClinicServiceJdbcTests", "funcSig": {}, "ClassType": "Class"}, "PetclinicInitializer": {"classVar": {"SPRING_PROFILE": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 653, "End": 674, "modifier": ["private", "static", "final"], "RawStr": "/**\n     * Spring profile used to choose the persistence layer implementation.\n     * <p>\n     * When using Spring jpa, use: jpa\n     * When using Spring JDBC, use: jdbc\n     * When using Spring Data JPA, use: spring-data-jpa\n     * <p/>\n     * <p>\n     * You also may use the -Dspring.profiles.active=jdbc VM options to change\n     * default jpa Spring profile.\n     */\n    private static final String SPRING_PROFILE = \"jpa\";"}}, "funcL": {"createRootApplicationContext": {"RetType": "WebApplicationContext", "RetCoreType": ["WebApplicationContext"], "RetTypeAST": {"name": "WebApplicationContext", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"rootAppContext": {"Var": "XmlWebApplicationContext", "CoreType": ["XmlWebApplicationContext"], "VarAST": {"name": "XmlWebApplicationContext", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 797, "End": 836, "RawStr": "XmlWebApplicationContext rootAppContext = new XmlWebApplicationContext();"}}, "modifier": ["protected"], "header": "@Override\n    protected WebApplicationContext createRootApplicationContext() {", "rawEnd": 315, "signature": "createRootApplicationContext()"}, "createServletApplicationContext": {"RetType": "WebApplicationContext", "RetCoreType": ["WebApplicationContext"], "RetTypeAST": {"name": "WebApplicationContext", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"webAppContext": {"Var": "XmlWebApplicationContext", "CoreType": ["XmlWebApplicationContext"], "VarAST": {"name": "XmlWebApplicationContext", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1178, "End": 1216, "RawStr": "XmlWebApplicationContext webAppContext = new XmlWebApplicationContext();"}}, "modifier": ["protected"], "header": "@Override\n    protected WebApplicationContext createServletApplicationContext() {", "rawEnd": 198, "signature": "createServletApplicationContext()"}, "getServletMappings": {"RetType": "String[]", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [null], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["protected"], "header": "@Override\n    protected String[] getServletMappings() {", "rawEnd": 40, "signature": "getServletMappings()"}, "getServletFilters": {"RetType": "Filter[]", "RetCoreType": ["Filter"], "RetTypeAST": {"name": "Filter", "dimensions": [null], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"characterEncodingFilter": {"Var": "CharacterEncodingFilter", "CoreType": ["CharacterEncodingFilter"], "VarAST": {"name": "CharacterEncodingFilter", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1584, "End": 1631, "RawStr": "// Used to provide the ability to enter Chinese characters inside the Owner Form\n        CharacterEncodingFilter characterEncodingFilter = new CharacterEncodingFilter(\"UTF-8\", true);"}}, "modifier": ["protected"], "header": "@Override\n    protected Filter[] getServletFilters() {", "rawEnd": 251, "signature": "getServletFilters()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/PetclinicInitializer.java", "super": {"extends": {"ext_start": 556, "values": ["AbstractDispatcherServletInitializer"], "CoreType": [["AbstractDispatcherServletInitializer"]]}}, "modifier": ["public"], "header": "/**\n * In Servlet 3.0+ environments, this class replaces the traditional {@code web.xml}-based approach in order to configure the\n * {@link ServletContext} programmatically.\n * <p/>\n * Create the Spring \"<strong>root</strong>\" application context.<br/>\n * Register a {@link DispatcherServlet}  in the servlet context.<br/>\n * For both servlets, register a {@link CharacterEncodingFilter}.\n * <p/>\n *\n * @author Antoine Rey\n */\npublic class PetclinicInitializer extends AbstractDispatcherServletInitializer {", "rawEnd": 1531, "Enum": [], "FQCN": "org.springframework.samples.petclinic.PetclinicInitializer", "Jparser": "org.springframework.samples.petclinic.PetclinicInitializer", "funcSig": {"createRootApplicationContext()": "createRootApplicationContext", "createServletApplicationContext()": "createServletApplicationContext", "getServletMappings()": "getServletMappings", "getServletFilters()": "getServletFilters"}, "ClassType": "Class"}, "PetTypeFormatter": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 515, "End": 542, "modifier": ["private", "final"], "RawStr": "private final ClinicService clinicService;"}}, "funcL": {"PetTypeFormatter": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"clinicService": {"Type": "ClinicService", "CoreType": ["ClinicService"], "TypeAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public PetTypeFormatter(ClinicService clinicService) {", "rawEnd": 50, "signature": "PetTypeFormatter(ClinicService)"}, "print": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"petType": {"Type": "PetType", "CoreType": ["PetType"], "TypeAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}}, "locale": {"Type": "Locale", "CoreType": ["Locale"], "TypeAST": {"name": "Locale", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public String print(PetType petType, Locale locale) {", "rawEnd": 40, "signature": "print(PetType, Locale)"}, "parse": {"RetType": "PetType", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": ["ParseException"], "Args": {"text": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}, "locale": {"Type": "Locale", "CoreType": ["Locale"], "TypeAST": {"name": "Locale", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"findPetTypes": {"Var": "Collection<PetType>", "CoreType": ["PetType"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 883, "End": 915, "RawStr": "Collection<PetType> findPetTypes = this.clinicService.findPetTypes();"}}, "modifier": ["public"], "header": "@Override\n    public PetType parse(String text, Locale locale) throws ParseException {", "rawEnd": 292, "signature": "parse(String, Locale)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/PetTypeFormatter.java", "super": {"implements": {"impl_start": 475, "values": ["Formatter"]}}, "modifier": ["public"], "header": "/**\n * Instructs Spring MVC on how to parse and print elements of type 'PetType'. Starting from Spring 3.0, Formatters have\n * come as an improvement in comparison to legacy PropertyEditors. See the following links for more details: - The\n * Spring ref doc: http://static.springsource.org/spring/docs/current/spring-framework-reference/html/validation.html#format-Formatter-SPI\n * - A nice blog entry from Gordon Dickens: http://gordondickens.com/wordpress/2010/09/30/using-spring-3-0-custom-type-converter/\n * <p/>\n * Also see how the bean 'conversionService' has been declared inside /WEB-INF/mvc-core-config.xml\n *\n * @author Mark Fisher\n * @author Juergen Hoeller\n * @author Michael Isvy\n */\npublic class PetTypeFormatter implements Formatter<PetType> {", "rawEnd": 674, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.PetTypeFormatter", "Jparser": "org.springframework.samples.petclinic.web.PetTypeFormatter", "funcSig": {"PetTypeFormatter(ClinicService)": "PetTypeFormatter", "print(PetType, Locale)": "print", "parse(String, Locale)": "parse"}, "ClassType": "Class"}, "OwnerController": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 834, "End": 861, "modifier": ["private", "final"], "RawStr": "private final ClinicService clinicService;"}, "VIEWS_OWNER_CREATE_OR_UPDATE_FORM": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 745, "End": 785, "modifier": ["private", "static", "final"], "RawStr": "private static final String VIEWS_OWNER_CREATE_OR_UPDATE_FORM = \"owners/createOrUpdateOwnerForm\";"}}, "funcL": {"OwnerController": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"clinicService": {"Type": "ClinicService", "CoreType": ["ClinicService"], "TypeAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public OwnerController(ClinicService clinicService) {", "rawEnd": 50, "signature": "OwnerController(ClinicService)"}, "setAllowedFields": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataBinder": {"Type": "WebDataBinder", "CoreType": ["WebDataBinder"], "TypeAST": {"name": "WebDataBinder", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@InitBinder\n    public void setAllowedFields(WebDataBinder dataBinder) {", "rawEnd": 52, "signature": "setAllowedFields(WebDataBinder)"}, "initCreationForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"model": {"Type": "Map<String, Object>", "CoreType": ["String", "Object"], "TypeAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {"owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1255, "End": 1266, "RawStr": "Owner owner = new Owner();"}}, "modifier": ["public"], "header": "@GetMapping(value = \"/owners/new\")\n    public String initCreationForm(Map<String, Object> model) {", "rawEnd": 126, "signature": "initCreationForm(Map)"}, "processCreationForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}, "result": {"Type": "BindingResult", "CoreType": ["BindingResult"], "TypeAST": {"name": "BindingResult", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@PostMapping(value = \"/owners/new\")\n    public String processCreationForm(@Valid Owner owner, BindingResult result) {", "rawEnd": 226, "signature": "processCreationForm(Owner, BindingResult)"}, "initFindForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"model": {"Type": "Map<String, Object>", "CoreType": ["String", "Object"], "TypeAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@GetMapping(value = \"/owners/find\")\n    public String initFindForm(Map<String, Object> model) {", "rawEnd": 83, "signature": "initFindForm(Map)"}, "processFindForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}, "result": {"Type": "BindingResult", "CoreType": ["BindingResult"], "TypeAST": {"name": "BindingResult", "dimensions": [], "arguments": null, "sub_type": null}}, "model": {"Type": "Map<String, Object>", "CoreType": ["String", "Object"], "TypeAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {"results": {"Var": "Collection<Owner>", "CoreType": ["Owner"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 2326, "End": 2351, "RawStr": "// find owners by last name\n        Collection<Owner> results = this.clinicService.findOwnerByLastName(owner.getLastName());"}}, "modifier": ["public"], "header": "@GetMapping(value = \"/owners\")\n    public String processFindForm(Owner owner, BindingResult result, Map<String, Object> model) {", "rawEnd": 854, "signature": "processFindForm(Owner, BindingResult, Map)"}, "initUpdateOwnerForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"ownerId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}, "model": {"Type": "Model", "CoreType": ["Model"], "TypeAST": {"name": "Model", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3180, "End": 3191, "RawStr": "Owner owner = this.clinicService.findOwnerById(ownerId);"}}, "modifier": ["public"], "header": "@GetMapping(value = \"/owners/{ownerId}/edit\")\n    public String initUpdateOwnerForm(@PathVariable(\"ownerId\") int ownerId, Model model) {", "rawEnd": 156, "signature": "initUpdateOwnerForm(int, Model)"}, "processUpdateOwnerForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}, "result": {"Type": "BindingResult", "CoreType": ["BindingResult"], "TypeAST": {"name": "BindingResult", "dimensions": [], "arguments": null, "sub_type": null}}, "ownerId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@PostMapping(value = \"/owners/{ownerId}/edit\")\n    public String processUpdateOwnerForm(@Valid Owner owner, BindingResult result, @PathVariable(\"ownerId\") int ownerId) {", "rawEnd": 253, "signature": "processUpdateOwnerForm(Owner, BindingResult, int)"}, "showOwner": {"RetType": "ModelAndView", "RetCoreType": ["ModelAndView"], "RetTypeAST": {"name": "ModelAndView", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"ownerId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"mav": {"Var": "ModelAndView", "CoreType": ["ModelAndView"], "VarAST": {"name": "ModelAndView", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3933, "End": 3949, "RawStr": "ModelAndView mav = new ModelAndView(\"owners/ownerDetails\");"}}, "modifier": ["public"], "header": "/**\n     * Custom handler for displaying an owner.\n     *\n     * @param ownerId the ID of the owner to display\n     * @return a ModelMap with the model attributes for the view\n     */\n    @GetMapping(\"/owners/{ownerId}\")\n    public ModelAndView showOwner(@PathVariable(\"ownerId\") int ownerId) {", "rawEnd": 160, "signature": "showOwner(int)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/OwnerController.java", "super": null, "modifier": ["public"], "header": "/**\n * @author Juergen Hoeller\n * @author Ken Krebs\n * @author Arjen Poutsma\n * @author Michael Isvy\n */\n@Controller\npublic class OwnerController {", "rawEnd": 3345, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.OwnerController", "Jparser": "org.springframework.samples.petclinic.web.OwnerController", "funcSig": {"OwnerController(ClinicService)": "OwnerController", "setAllowedFields(WebDataBinder)": "setAllowedFields", "initCreationForm(Map)": "initCreationForm", "processCreationForm(Owner, BindingResult)": "processCreationForm", "initFindForm(Map)": "initFindForm", "processFindForm(Owner, BindingResult, Map)": "processFindForm", "initUpdateOwnerForm(int, Model)": "initUpdateOwnerForm", "processUpdateOwnerForm(Owner, BindingResult, int)": "processUpdateOwnerForm", "showOwner(int)": "showOwner"}, "ClassType": "Class"}, "VetController": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 593, "End": 620, "modifier": ["private", "final"], "RawStr": "private final ClinicService clinicService;"}}, "funcL": {"VetController": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"clinicService": {"Type": "ClinicService", "CoreType": ["ClinicService"], "TypeAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public VetController(ClinicService clinicService) {", "rawEnd": 50, "signature": "VetController(ClinicService)"}, "showVetList": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"model": {"Type": "Map<String, Object>", "CoreType": ["String", "Object"], "TypeAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {"vets": {"Var": "Vets", "CoreType": ["Vets"], "VarAST": {"name": "Vets", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 927, "End": 936, "RawStr": "// Here we are returning an object of type 'Vets' rather than a collection of Vet objects\n        // so it is simpler for Object-Xml mapping\n        Vets vets = getVets();"}}, "modifier": ["public"], "header": "@GetMapping(\"/vets\")\n    public String showVetList(Map<String, Object> model) {", "rawEnd": 250, "signature": "showVetList(Map)"}, "showJsonVetList": {"RetType": "Vets", "RetCoreType": ["Vets"], "RetTypeAST": {"name": "Vets", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@GetMapping(value = \"/vets.json\", produces = MediaType.APPLICATION_JSON_VALUE)\n    @ResponseBody\n    public\n    Vets showJsonVetList() {", "rawEnd": 32, "signature": "showJsonVetList()"}, "showXmlVetList": {"RetType": "Vets", "RetCoreType": ["Vets"], "RetTypeAST": {"name": "Vets", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@GetMapping(value = \"/vets.xml\", produces = MediaType.APPLICATION_XML_VALUE)\n    @ResponseBody\n    public\n    Vets showXmlVetList() {", "rawEnd": 32, "signature": "showXmlVetList()"}, "getVets": {"RetType": "Vets", "RetCoreType": ["Vets"], "RetTypeAST": {"name": "Vets", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"vets": {"Var": "Vets", "CoreType": ["Vets"], "VarAST": {"name": "Vets", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1427, "End": 1436, "RawStr": "// Here we are returning an object of type 'Vets' rather than a collection of Vet objects\n        // so it is simpler for JSon/Object mapping\n        Vets vets = new Vets();"}}, "modifier": ["private"], "header": "private Vets getVets() {", "rawEnd": 274, "signature": "getVets()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/VetController.java", "super": null, "modifier": ["public"], "header": "/**\n * @author Juergen Hoeller\n * @author Mark Fisher\n * @author Ken Krebs\n * @author Arjen Poutsma\n */\n@Controller\npublic class VetController {", "rawEnd": 1158, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.VetController", "Jparser": "org.springframework.samples.petclinic.web.VetController", "funcSig": {"VetController(ClinicService)": "VetController", "showVetList(Map)": "showVetList", "showJsonVetList()": "showJsonVetList", "showXmlVetList()": "showXmlVetList", "getVets()": "getVets"}, "ClassType": "Class"}, "PetController": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 962, "End": 989, "modifier": ["private", "final"], "RawStr": "private final ClinicService clinicService;"}, "VIEWS_PETS_CREATE_OR_UPDATE_FORM": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 874, "End": 913, "modifier": ["private", "static", "final"], "RawStr": "private static final String VIEWS_PETS_CREATE_OR_UPDATE_FORM = \"pets/createOrUpdatePetForm\";"}}, "funcL": {"PetController": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"clinicService": {"Type": "ClinicService", "CoreType": ["ClinicService"], "TypeAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public PetController(ClinicService clinicService) {", "rawEnd": 50, "signature": "PetController(ClinicService)"}, "populatePetTypes": {"RetType": "Collection<PetType>", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@ModelAttribute(\"types\")\n    public Collection<PetType> populatePetTypes() {", "rawEnd": 56, "signature": "populatePetTypes()"}, "findOwner": {"RetType": "Owner", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"ownerId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@ModelAttribute(\"owner\")\n    public Owner findOwner(@PathVariable(\"ownerId\") int ownerId) {", "rawEnd": 64, "signature": "findOwner(int)"}, "initOwnerBinder": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataBinder": {"Type": "WebDataBinder", "CoreType": ["WebDataBinder"], "TypeAST": {"name": "WebDataBinder", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@InitBinder(\"owner\")\n    public void initOwnerBinder(WebDataBinder dataBinder) {", "rawEnd": 52, "signature": "initOwnerBinder(WebDataBinder)"}, "initPetBinder": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataBinder": {"Type": "WebDataBinder", "CoreType": ["WebDataBinder"], "TypeAST": {"name": "WebDataBinder", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@InitBinder(\"pet\")\n    public void initPetBinder(WebDataBinder dataBinder) {", "rawEnd": 59, "signature": "initPetBinder(WebDataBinder)"}, "initCreationForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}, "model": {"Type": "ModelMap", "CoreType": ["ModelMap"], "TypeAST": {"name": "ModelMap", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"pet": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1915, "End": 1922, "RawStr": "Pet pet = new Pet();"}}, "modifier": ["public"], "header": "@GetMapping(value = \"/pets/new\")\n    public String initCreationForm(Owner owner, ModelMap model) {", "rawEnd": 142, "signature": "initCreationForm(Owner, ModelMap)"}, "processCreationForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}, "pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}, "result": {"Type": "BindingResult", "CoreType": ["BindingResult"], "TypeAST": {"name": "BindingResult", "dimensions": [], "arguments": null, "sub_type": null}}, "model": {"Type": "ModelMap", "CoreType": ["ModelMap"], "TypeAST": {"name": "ModelMap", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@PostMapping(value = \"/pets/new\")\n    public String processCreationForm(Owner owner, @Valid Pet pet, BindingResult result, ModelMap model) {", "rawEnd": 472, "signature": "processCreationForm(Owner, Pet, BindingResult, ModelMap)"}, "initUpdateForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}, "model": {"Type": "ModelMap", "CoreType": ["ModelMap"], "TypeAST": {"name": "ModelMap", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"pet": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2910, "End": 2917, "RawStr": "Pet pet = this.clinicService.findPetById(petId);"}}, "modifier": ["public"], "header": "@GetMapping(value = \"/pets/{petId}/edit\")\n    public String initUpdateForm(@PathVariable(\"petId\") int petId, ModelMap model) {", "rawEnd": 143, "signature": "initUpdateForm(int, ModelMap)"}, "processUpdateForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}, "result": {"Type": "BindingResult", "CoreType": ["BindingResult"], "TypeAST": {"name": "BindingResult", "dimensions": [], "arguments": null, "sub_type": null}}, "owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}, "model": {"Type": "ModelMap", "CoreType": ["ModelMap"], "TypeAST": {"name": "ModelMap", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@PostMapping(value = \"/pets/{petId}/edit\")\n    public String processUpdateForm(@Valid Pet pet, BindingResult result, Owner owner, ModelMap model) {", "rawEnd": 280, "signature": "processUpdateForm(Pet, BindingResult, Owner, ModelMap)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/PetController.java", "super": null, "modifier": ["public"], "header": "/**\n * @author Juergen Hoeller\n * @author Ken Krebs\n * @author Arjen Poutsma\n */\n@Controller\n@RequestMapping(\"/owners/{ownerId}\")\npublic class PetController {", "rawEnd": 2420, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.PetController", "Jparser": "org.springframework.samples.petclinic.web.PetController", "funcSig": {"PetController(ClinicService)": "PetController", "populatePetTypes()": "populatePetTypes", "findOwner(int)": "findOwner", "initOwnerBinder(WebDataBinder)": "initOwnerBinder", "initPetBinder(WebDataBinder)": "initPetBinder", "initCreationForm(Owner, ModelMap)": "initCreationForm", "processCreationForm(Owner, Pet, BindingResult, ModelMap)": "processCreationForm", "initUpdateForm(int, ModelMap)": "initUpdateForm", "processUpdateForm(Pet, BindingResult, Owner, ModelMap)": "processUpdateForm"}, "ClassType": "Class"}, "CrashController": {"classVar": {}, "funcL": {"triggerException": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@GetMapping(value = \"/oups\")\n    public String triggerException() {", "rawEnd": 141, "signature": "triggerException()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/CrashController.java", "super": null, "modifier": ["public"], "header": "/**\n * Controller used to showcase what happens when an exception is thrown\n *\n * @author Michael Isvy\n *         <p/>\n *         Also see how the bean of type 'SimpleMappingExceptionResolver' has been declared inside\n *         /WEB-INF/mvc-core-config.xml\n */\n@Controller\npublic class CrashController {", "rawEnd": 218, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.CrashController", "Jparser": "org.springframework.samples.petclinic.web.CrashController", "funcSig": {"triggerException()": "triggerException"}, "ClassType": "Class"}, "PetValidator": {"classVar": {"REQUIRED": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 380, "End": 395, "modifier": ["private", "static", "final"], "RawStr": "private static final String REQUIRED = \"required\";"}}, "funcL": {"validate": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"obj": {"Type": "Object", "CoreType": ["Object"], "TypeAST": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}}, "errors": {"Type": "Errors", "CoreType": ["Errors"], "TypeAST": {"name": "Errors", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"pet": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 503, "End": 510, "RawStr": "Pet pet = (Pet) obj;"}, "name": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 532, "End": 543, "RawStr": "String name = pet.getName();"}}, "modifier": ["public"], "header": "@Override\n    public void validate(Object obj, Errors errors) {", "rawEnd": 514, "signature": "validate(Object, Errors)"}, "supports": {"RetType": "boolean", "RetCoreType": ["boolean"], "RetTypeAST": {"name": "boolean", "dimensions": []}, "Throws": null, "Args": {"clazz": {"Type": "Class<?>", "CoreType": ["Class"], "TypeAST": {"name": "Class", "dimensions": [], "arguments": [{"type": null, "pattern_type": "?"}], "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * This Validator validates *just* Pet instances\n     */\n    @Override\n    public boolean supports(Class<?> clazz) {", "rawEnd": 56, "signature": "supports(Class)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/PetValidator.java", "super": {"implements": {"impl_start": 342, "values": ["Validator"]}}, "modifier": ["public"], "header": "/**\n * <code>Validator</code> for <code>Pet</code> forms.\n * <p>\n * We're not using Bean Validation annotations here because it is easier to define such validation rule in Java.\n * </p>\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n */\npublic class PetValidator implements Validator {", "rawEnd": 829, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.PetValidator", "Jparser": "org.springframework.samples.petclinic.web.PetValidator", "funcSig": {"validate(Object, Errors)": "validate", "supports(Class)": "supports"}, "ClassType": "Class"}, "VisitController": {"classVar": {"clinicService": {"Var": "ClinicService", "CoreType": ["ClinicService"], "VarAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 675, "End": 702, "modifier": ["private", "final"], "RawStr": "private final ClinicService clinicService;"}}, "funcL": {"VisitController": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"clinicService": {"Type": "ClinicService", "CoreType": ["ClinicService"], "TypeAST": {"name": "ClinicService", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public VisitController(ClinicService clinicService) {", "rawEnd": 50, "signature": "VisitController(ClinicService)"}, "setAllowedFields": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataBinder": {"Type": "WebDataBinder", "CoreType": ["WebDataBinder"], "TypeAST": {"name": "WebDataBinder", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@InitBinder\n    public void setAllowedFields(WebDataBinder dataBinder) {", "rawEnd": 52, "signature": "setAllowedFields(WebDataBinder)"}, "loadPetWithVisit": {"RetType": "Visit", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"pet": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1155, "End": 1162, "RawStr": "Pet pet = this.clinicService.findPetById(petId);"}, "visit": {"Var": "Visit", "CoreType": ["Visit"], "VarAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1212, "End": 1223, "RawStr": "Visit visit = new Visit();"}}, "modifier": ["public"], "header": "/**\n     * Called before each and every @GetMapping or @PostMapping annotated method.\n     * 2 goals:\n     * - Make sure we always have fresh data\n     * - Since we do not use the session scope, make sure that Pet object always has an id\n     * (Even though id is not part of the form fields)\n     *\n     * @param petId\n     * @return Pet\n     */\n    @ModelAttribute(\"visit\")\n    public Visit loadPetWithVisit(@PathVariable(\"petId\") int petId) {", "rawEnd": 149, "signature": "loadPetWithVisit(int)"}, "initNewVisitForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}, "model": {"Type": "Map<String, Object>", "CoreType": ["String", "Object"], "TypeAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "// Spring MVC calls method loadPetWithVisit(...) before initNewVisitForm is called\n    @GetMapping(value = \"/owners/*/pets/{petId}/visits/new\")\n    public String initNewVisitForm(@PathVariable(\"petId\") int petId, Map<String, Object> model) {", "rawEnd": 53, "signature": "initNewVisitForm(int, Map)"}, "processNewVisitForm": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"visit": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}, "result": {"Type": "BindingResult", "CoreType": ["BindingResult"], "TypeAST": {"name": "BindingResult", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "// Spring MVC calls method loadPetWithVisit(...) before processNewVisitForm is called\n    @PostMapping(value = \"/owners/{ownerId}/pets/{petId}/visits/new\")\n    public String processNewVisitForm(@Valid Visit visit, BindingResult result) {", "rawEnd": 216, "signature": "processNewVisitForm(Visit, BindingResult)"}, "showVisits": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}, "model": {"Type": "Map<String, Object>", "CoreType": ["String", "Object"], "TypeAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@GetMapping(value = \"/owners/*/pets/{petId}/visits\")\n    public String showVisits(@PathVariable int petId, Map<String, Object> model) {", "rawEnd": 114, "signature": "showVisits(int, Map)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/web/VisitController.java", "super": null, "modifier": ["public"], "header": "/**\n * @author Juergen Hoeller\n * @author Ken Krebs\n * @author Arjen Poutsma\n * @author Michael Isvy\n */\n@Controller\npublic class VisitController {", "rawEnd": 1920, "Enum": [], "FQCN": "org.springframework.samples.petclinic.web.VisitController", "Jparser": "org.springframework.samples.petclinic.web.VisitController", "funcSig": {"VisitController(ClinicService)": "VisitController", "setAllowedFields(WebDataBinder)": "setAllowedFields", "loadPetWithVisit(int)": "loadPetWithVisit", "initNewVisitForm(int, Map)": "initNewVisitForm", "processNewVisitForm(Visit, BindingResult)": "processNewVisitForm", "showVisits(int, Map)": "showVisits"}, "ClassType": "Class"}, "Owner": {"classVar": {"address": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 825, "End": 839, "modifier": ["private"], "RawStr": "@Column(name = \"address\")\n    @NotEmpty\n    private String address;"}, "city": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 906, "End": 917, "modifier": ["private"], "RawStr": "@Column(name = \"city\")\n    @NotEmpty\n    private String city;"}, "telephone": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1022, "End": 1038, "modifier": ["private"], "RawStr": "@Column(name = \"telephone\")\n    @NotEmpty\n    @Digits(fraction = 0, integer = 10)\n    private String telephone;"}, "pets": {"Var": "Set<Pet>", "CoreType": ["Pet"], "VarAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1094, "End": 1107, "modifier": ["private"], "RawStr": "@OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n    private Set<Pet> pets;"}}, "funcL": {"getAddress": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public String getAddress() {", "rawEnd": 35, "signature": "getAddress()"}, "setAddress": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"address": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setAddress(String address) {", "rawEnd": 38, "signature": "setAddress(String)"}, "getCity": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public String getCity() {", "rawEnd": 32, "signature": "getCity()"}, "setCity": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"city": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setCity(String city) {", "rawEnd": 32, "signature": "setCity(String)"}, "getTelephone": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public String getTelephone() {", "rawEnd": 37, "signature": "getTelephone()"}, "setTelephone": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"telephone": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setTelephone(String telephone) {", "rawEnd": 42, "signature": "setTelephone(String)"}, "getPetsInternal": {"RetType": "Set<Pet>", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["protected"], "header": "protected Set<Pet> getPetsInternal() {", "rawEnd": 116, "signature": "getPetsInternal()"}, "setPetsInternal": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"pets": {"Type": "Set<Pet>", "CoreType": ["Pet"], "TypeAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "protected void setPetsInternal(Set<Pet> pets) {", "rawEnd": 32, "signature": "setPetsInternal(Set)"}, "getPets": {"RetType": "List<Pet>", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"sortedPets": {"Var": "List<Pet>", "CoreType": ["Pet"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1850, "End": 1870, "RawStr": "List<Pet> sortedPets = new ArrayList<>(getPetsInternal());"}}, "modifier": ["public"], "header": "public List<Pet> getPets() {", "rawEnd": 222, "signature": "getPets()"}, "addPet": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void addPet(Pet pet) {", "rawEnd": 70, "signature": "addPet(Pet)"}, "getPet [overloaded_#001]": {"RetType": "Pet", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"name": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Return the Pet with the given name, or null if none found for this Owner.\n     *\n     * @param name to test\n     * @return true if pet name is already in use\n     */\n    public Pet getPet(String name) {", "rawEnd": 42, "signature": "getPet(String)"}, "getPet [overloaded_#002]": {"RetType": "Pet", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"name": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}, "ignoreNew": {"Type": "boolean", "CoreType": ["boolean"], "TypeAST": {"name": "boolean", "dimensions": []}}}, "Locals": {"compName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2531, "End": 2546, "RawStr": "String compName = pet.getName();"}}, "modifier": ["public"], "header": "/**\n     * Return the Pet with the given name, or null if none found for this Owner.\n     *\n     * @param name to test\n     * @return true if pet name is already in use\n     */\n    public Pet getPet(String name, boolean ignoreNew) {", "rawEnd": 371, "signature": "getPet(String, boolean)"}, "toString": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public String toString() {", "rawEnd": 393, "signature": "toString()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Owner.java", "super": {"extends": {"ext_start": 752, "values": ["Person"], "CoreType": [["Person"]]}}, "modifier": ["public"], "header": "/**\n * Simple JavaBean domain object representing an owner.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Sam Brannen\n * @author Michael Isvy\n */\n@Entity\n@Table(name = \"owners\")\npublic class Owner extends Person {", "rawEnd": 2717, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Owner", "Jparser": "org.springframework.samples.petclinic.model.Owner", "funcSig": {"getAddress()": "getAddress", "setAddress(String)": "setAddress", "getCity()": "getCity", "setCity(String)": "setCity", "getTelephone()": "getTelephone", "setTelephone(String)": "setTelephone", "getPetsInternal()": "getPetsInternal", "setPetsInternal(Set)": "setPetsInternal", "getPets()": "getPets", "addPet(Pet)": "addPet", "getPet(String)": "getPet [overloaded_#001]", "getPet(String, boolean)": "getPet [overloaded_#002]", "toString()": "toString"}, "ClassType": "Entity"}, "NamedEntity": {"classVar": {"name": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 303, "End": 314, "modifier": ["private"], "RawStr": "@Column(name = \"name\")\n    private String name;"}}, "funcL": {"getName": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public String getName() {", "rawEnd": 32, "signature": "getName()"}, "setName": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"name": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setName(String name) {", "rawEnd": 32, "signature": "setName(String)"}, "toString": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public String toString() {", "rawEnd": 37, "signature": "toString()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/NamedEntity.java", "super": {"extends": {"ext_start": 239, "values": ["BaseEntity"], "CoreType": [["BaseEntity"]]}}, "modifier": ["public"], "header": "/**\n * Simple JavaBean domain object adds a name property to <code>BaseEntity</code>. Used as a base class for objects\n * needing these properties.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n */\n@MappedSuperclass\npublic class NamedEntity extends BaseEntity {", "rawEnd": 274, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.NamedEntity", "Jparser": "org.springframework.samples.petclinic.model.NamedEntity", "funcSig": {"getName()": "getName", "setName(String)": "setName", "toString()": "toString"}, "ClassType": "Class"}, "Vet": {"classVar": {"specialties": {"Var": "Set<Specialty>", "CoreType": ["Specialty"], "VarAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 933, "End": 959, "modifier": ["private"], "RawStr": "@ManyToMany(fetch = FetchType.EAGER)\n    @JoinTable(name = \"vet_specialties\", joinColumns = @JoinColumn(name = \"vet_id\"),\n        inverseJoinColumns = @JoinColumn(name = \"specialty_id\"))\n    private Set<Specialty> specialties;"}}, "funcL": {"getSpecialtiesInternal": {"RetType": "Set<Specialty>", "RetCoreType": ["Specialty"], "RetTypeAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["protected"], "header": "protected Set<Specialty> getSpecialtiesInternal() {", "rawEnd": 137, "signature": "getSpecialtiesInternal()"}, "setSpecialtiesInternal": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"specialties": {"Type": "Set<Specialty>", "CoreType": ["Specialty"], "TypeAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "protected void setSpecialtiesInternal(Set<Specialty> specialties) {", "rawEnd": 46, "signature": "setSpecialtiesInternal(Set)"}, "getSpecialties": {"RetType": "List<Specialty>", "RetCoreType": ["Specialty"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"sortedSpecs": {"Var": "List<Specialty>", "CoreType": ["Specialty"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1345, "End": 1372, "RawStr": "List<Specialty> sortedSpecs = new ArrayList<>(getSpecialtiesInternal());"}}, "modifier": ["public"], "header": "@XmlElement\n    public List<Specialty> getSpecialties() {", "rawEnd": 238, "signature": "getSpecialties()"}, "getNrOfSpecialties": {"RetType": "int", "RetCoreType": ["int"], "RetTypeAST": {"name": "int", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public int getNrOfSpecialties() {", "rawEnd": 54, "signature": "getNrOfSpecialties()"}, "addSpecialty": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"specialty": {"Type": "Specialty", "CoreType": ["Specialty"], "TypeAST": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void addSpecialty(Specialty specialty) {", "rawEnd": 55, "signature": "addSpecialty(Specialty)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Vet.java", "super": {"extends": {"ext_start": 689, "values": ["Person"], "CoreType": [["Person"]]}}, "modifier": ["public"], "header": "/**\n * Simple JavaBean domain object representing a veterinarian.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Sam Brannen\n * @author Arjen Poutsma\n */\n@Entity\n@Table(name = \"vets\")\npublic class Vet extends Person {", "rawEnd": 1050, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Vet", "Jparser": "org.springframework.samples.petclinic.model.Vet", "funcSig": {"getSpecialtiesInternal()": "getSpecialtiesInternal", "setSpecialtiesInternal(Set)": "setSpecialtiesInternal", "getSpecialties()": "getSpecialties", "getNrOfSpecialties()": "getNrOfSpecialties", "addSpecialty(Specialty)": "addSpecialty"}, "ClassType": "Entity"}, "Vets": {"classVar": {"vetList": {"Var": "List<Vet>", "CoreType": ["Vet"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 306, "End": 323, "modifier": ["private"], "RawStr": "private List<Vet> vetList;"}}, "funcL": {"getVetList": {"RetType": "List<Vet>", "RetCoreType": ["Vet"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@XmlElement(name = \"vet\")\n    public List<Vet> getVetList() {", "rawEnd": 112, "signature": "getVetList()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Vets.java", "super": null, "modifier": ["public"], "header": "/**\n * Simple domain object representing a list of veterinarians. Mostly here to be used for the 'vets' {@link\n * org.springframework.web.servlet.view.xml.MarshallingView}.\n *\n * @author Arjen Poutsma\n */\n@XmlRootElement\npublic class Vets {", "rawEnd": 214, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Vets", "Jparser": "org.springframework.samples.petclinic.model.Vets", "funcSig": {"getVetList()": "getVetList"}, "ClassType": "Class"}, "Pet": {"classVar": {"birthDate": {"Var": "LocalDate", "CoreType": ["LocalDate"], "VarAST": {"name": "LocalDate", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 914, "End": 933, "modifier": ["private"], "RawStr": "@Column(name = \"birth_date\")\n    @DateTimeFormat(pattern = \"yyyy/MM/dd\")\n    private LocalDate birthDate;"}, "type": {"Var": "PetType", "CoreType": ["PetType"], "VarAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1005, "End": 1017, "modifier": ["private"], "RawStr": "@ManyToOne\n    @JoinColumn(name = \"type_id\")\n    private PetType type;"}, "owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1089, "End": 1100, "modifier": ["private"], "RawStr": "@ManyToOne\n    @JoinColumn(name = \"owner_id\")\n    private Owner owner;"}, "visits": {"Var": "Set<Visit>", "CoreType": ["Visit"], "VarAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1156, "End": 1173, "modifier": ["private"], "RawStr": "@OneToMany(cascade = CascadeType.ALL, mappedBy = \"pet\", fetch = FetchType.EAGER)\n    private Set<Visit> visits;"}}, "funcL": {"setBirthDate": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"birthDate": {"Type": "LocalDate", "CoreType": ["LocalDate"], "TypeAST": {"name": "LocalDate", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setBirthDate(LocalDate birthDate) {", "rawEnd": 42, "signature": "setBirthDate(LocalDate)"}, "getBirthDate": {"RetType": "LocalDate", "RetCoreType": ["LocalDate"], "RetTypeAST": {"name": "LocalDate", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public LocalDate getBirthDate() {", "rawEnd": 37, "signature": "getBirthDate()"}, "getType": {"RetType": "PetType", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public PetType getType() {", "rawEnd": 32, "signature": "getType()"}, "setType": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"type": {"Type": "PetType", "CoreType": ["PetType"], "TypeAST": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setType(PetType type) {", "rawEnd": 32, "signature": "setType(PetType)"}, "getOwner": {"RetType": "Owner", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public Owner getOwner() {", "rawEnd": 33, "signature": "getOwner()"}, "setOwner": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "protected void setOwner(Owner owner) {", "rawEnd": 34, "signature": "setOwner(Owner)"}, "getVisitsInternal": {"RetType": "Set<Visit>", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["protected"], "header": "protected Set<Visit> getVisitsInternal() {", "rawEnd": 122, "signature": "getVisitsInternal()"}, "setVisitsInternal": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"visits": {"Type": "Set<Visit>", "CoreType": ["Visit"], "TypeAST": {"name": "Set", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "protected void setVisitsInternal(Set<Visit> visits) {", "rawEnd": 36, "signature": "setVisitsInternal(Set)"}, "getVisits": {"RetType": "List<Visit>", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"sortedVisits": {"Var": "List<Visit>", "CoreType": ["Visit"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1937, "End": 1961, "RawStr": "List<Visit> sortedVisits = new ArrayList<>(getVisitsInternal());"}}, "modifier": ["public"], "header": "public List<Visit> getVisits() {", "rawEnd": 234, "signature": "getVisits()"}, "addVisit": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"visit": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void addVisit(Visit visit) {", "rawEnd": 74, "signature": "addVisit(Visit)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Pet.java", "super": {"extends": {"ext_start": 803, "values": ["NamedEntity"], "CoreType": [["NamedEntity"]]}}, "modifier": ["public"], "header": "/**\n * Simple business object representing a pet.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Sam Brannen\n */\n@Entity\n@Table(name = \"pets\")\npublic class Pet extends NamedEntity {", "rawEnd": 1486, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Pet", "Jparser": "org.springframework.samples.petclinic.model.Pet", "funcSig": {"setBirthDate(LocalDate)": "setBirthDate", "getBirthDate()": "getBirthDate", "getType()": "getType", "setType(PetType)": "setType", "getOwner()": "getOwner", "setOwner(Owner)": "setOwner", "getVisitsInternal()": "getVisitsInternal", "setVisitsInternal(Set)": "setVisitsInternal", "getVisits()": "getVisits", "addVisit(Visit)": "addVisit"}, "ClassType": "Entity"}, "BaseEntity": {"classVar": {"id": {"Var": "Integer", "CoreType": ["Integer"], "VarAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 377, "End": 387, "modifier": ["protected"], "RawStr": "@Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    protected Integer id;"}}, "funcL": {"getId": {"RetType": "Integer", "RetCoreType": ["Integer"], "RetTypeAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public Integer getId() {", "rawEnd": 25, "signature": "getId()"}, "setId": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"id": {"Type": "Integer", "CoreType": ["Integer"], "TypeAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setId(Integer id) {", "rawEnd": 28, "signature": "setId(Integer)"}, "isNew": {"RetType": "boolean", "RetCoreType": ["boolean"], "RetTypeAST": {"name": "boolean", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public boolean isNew() {", "rawEnd": 38, "signature": "isNew()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/BaseEntity.java", "super": null, "modifier": ["public"], "header": "/**\n * Simple JavaBean domain object with an id property. Used as a base class for objects needing this property.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n */\n@MappedSuperclass\npublic class BaseEntity {", "rawEnd": 281, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.BaseEntity", "Jparser": "org.springframework.samples.petclinic.model.BaseEntity", "funcSig": {"getId()": "getId", "setId(Integer)": "setId", "isNew()": "isNew"}, "ClassType": "Class"}, "Person": {"classVar": {"firstName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 359, "End": 375, "modifier": ["protected"], "RawStr": "@Column(name = \"first_name\")\n    @NotEmpty\n    protected String firstName;"}, "lastName": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 444, "End": 459, "modifier": ["protected"], "RawStr": "@Column(name = \"last_name\")\n    @NotEmpty\n    protected String lastName;"}}, "funcL": {"getFirstName": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public String getFirstName() {", "rawEnd": 37, "signature": "getFirstName()"}, "setFirstName": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"firstName": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setFirstName(String firstName) {", "rawEnd": 42, "signature": "setFirstName(String)"}, "getLastName": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public String getLastName() {", "rawEnd": 36, "signature": "getLastName()"}, "setLastName": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"lastName": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "public void setLastName(String lastName) {", "rawEnd": 40, "signature": "setLastName(String)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Person.java", "super": {"extends": {"ext_start": 279, "values": ["BaseEntity"], "CoreType": [["BaseEntity"]]}}, "modifier": ["public"], "header": "/**\n * Simple JavaBean domain object representing an person.\n *\n * @author Ken Krebs\n */\n@MappedSuperclass\npublic class Person extends BaseEntity {", "rawEnd": 486, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Person", "Jparser": "org.springframework.samples.petclinic.model.Person", "funcSig": {"getFirstName()": "getFirstName", "setFirstName(String)": "setFirstName", "getLastName()": "getLastName", "setLastName(String)": "setLastName"}, "ClassType": "Class"}, "Specialty": {"classVar": {}, "funcL": {}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Specialty.java", "super": {"extends": {"ext_start": 248, "values": ["NamedEntity"], "CoreType": [["NamedEntity"]]}}, "modifier": ["public"], "header": "/**\n * Models a {@link Vet Vet's} specialty (for example, dentistry).\n *\n * @author Juergen Hoeller\n */\n@Entity\n@Table(name = \"specialties\")\npublic class Specialty extends NamedEntity {", "rawEnd": 3, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Specialty", "Jparser": "org.springframework.samples.petclinic.model.Specialty", "funcSig": {}, "ClassType": "Entity"}, "PetType": {"classVar": {}, "funcL": {}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/PetType.java", "super": {"extends": {"ext_start": 246, "values": ["NamedEntity"], "CoreType": [["NamedEntity"]]}}, "modifier": ["public"], "header": "/**\n * @author Juergen Hoeller\n *         Can be Cat, Dog, Hamster...\n */\n@Entity\n@Table(name = \"types\")\npublic class PetType extends NamedEntity {", "rawEnd": 3, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.PetType", "Jparser": "org.springframework.samples.petclinic.model.PetType", "funcSig": {}, "ClassType": "Entity"}, "Visit": {"classVar": {"date": {"Var": "LocalDate", "CoreType": ["LocalDate"], "VarAST": {"name": "LocalDate", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 628, "End": 642, "modifier": ["private"], "RawStr": "/**\n     * Holds value of property date.\n     */\n    @Column(name = \"visit_date\")\n    @DateTimeFormat(pattern = \"yyyy/MM/dd\")\n    private LocalDate date;"}, "description": {"Var": "String", "CoreType": ["String"], "VarAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 741, "End": 759, "modifier": ["private"], "RawStr": "/**\n     * Holds value of property description.\n     */\n    @NotEmpty\n    @Column(name = \"description\")\n    private String description;"}, "pet": {"Var": "Pet", "CoreType": ["Pet"], "VarAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 863, "End": 870, "modifier": ["private"], "RawStr": "/**\n     * Holds value of property pet.\n     */\n    @ManyToOne\n    @JoinColumn(name = \"pet_id\")\n    private Pet pet;"}}, "funcL": {"Visit": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Creates a new instance of Visit for the current date\n     */\n    public Visit() {", "rawEnd": 43, "signature": "Visit()"}, "getDate": {"RetType": "LocalDate", "RetCoreType": ["LocalDate"], "RetTypeAST": {"name": "LocalDate", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Getter for property date.\n     *\n     * @return Value of property date.\n     */\n    public LocalDate getDate() {", "rawEnd": 32, "signature": "getDate()"}, "setDate": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"date": {"Type": "LocalDate", "CoreType": ["LocalDate"], "TypeAST": {"name": "LocalDate", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Setter for property date.\n     *\n     * @param date New value of property date.\n     */\n    public void setDate(LocalDate date) {", "rawEnd": 32, "signature": "setDate(LocalDate)"}, "getDescription": {"RetType": "String", "RetCoreType": ["String"], "RetTypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Getter for property description.\n     *\n     * @return Value of property description.\n     */\n    public String getDescription() {", "rawEnd": 39, "signature": "getDescription()"}, "setDescription": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"description": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Setter for property description.\n     *\n     * @param description New value of property description.\n     */\n    public void setDescription(String description) {", "rawEnd": 46, "signature": "setDescription(String)"}, "getPet": {"RetType": "Pet", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Getter for property pet.\n     *\n     * @return Value of property pet.\n     */\n    public Pet getPet() {", "rawEnd": 31, "signature": "getPet()"}, "setPet": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n     * Setter for property pet.\n     *\n     * @param pet New value of property pet.\n     */\n    public void setPet(Pet pet) {", "rawEnd": 30, "signature": "setPet(Pet)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/model/Visit.java", "super": {"extends": {"ext_start": 486, "values": ["BaseEntity"], "CoreType": [["BaseEntity"]]}}, "modifier": ["public"], "header": "/**\n * Simple JavaBean domain object representing a visit.\n *\n * @author Ken Krebs\n */\n@Entity\n@Table(name = \"visits\")\npublic class Visit extends BaseEntity {", "rawEnd": 1633, "Enum": [], "FQCN": "org.springframework.samples.petclinic.model.Visit", "Jparser": "org.springframework.samples.petclinic.model.Visit", "funcSig": {"Visit()": "Visit", "getDate()": "getDate", "setDate(LocalDate)": "setDate", "getDescription()": "getDescription", "setDescription(String)": "setDescription", "getPet()": "getPet", "setPet(Pet)": "setPet"}, "ClassType": "Entity"}, "EntityUtils": {"classVar": {}, "funcL": {"EntityUtils": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["private"], "header": "private EntityUtils() {", "rawEnd": 31, "signature": "EntityUtils()"}, "getById": {"RetType": "T", "RetCoreType": ["T"], "RetTypeAST": {"name": "T", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"entities": {"Type": "Collection<T>", "CoreType": ["T"], "TypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "T", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}, "entityClass": {"Type": "Class<T>", "CoreType": ["Class", "T"], "TypeAST": {"name": "Class", "dimensions": [], "arguments": [{"type": {"name": "T", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}, "entityId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public", "static"], "header": "/**\n     * Look up the entity of the given class with the given id in the given collection.\n     *\n     * @param entities    the collection to search\n     * @param entityClass the entity class to look up\n     * @param entityId    the entity id to look up\n     * @return the found entity\n     * @throws ObjectRetrievalFailureException if the entity was not found\n     */\n    public static <T extends BaseEntity> T getById(Collection<T> entities, Class<T> entityClass, int entityId) {", "rawEnd": 251, "signature": "getById(Collection, Class, int)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/util/EntityUtils.java", "super": null, "modifier": ["public"], "header": "/**\n * Utility methods for handling entities. Separate from the BaseEntity class mainly because of dependency on the\n * ORM-associated ObjectRetrievalFailureException.\n *\n * @author Juergen Hoeller\n * @author Sam Brannen\n * @see org.springframework.samples.petclinic.model.BaseEntity\n * @since 29.10.2003\n */\npublic class EntityUtils {", "rawEnd": 802, "Enum": [], "FQCN": "org.springframework.samples.petclinic.util.EntityUtils", "Jparser": "org.springframework.samples.petclinic.util.EntityUtils", "funcSig": {"EntityUtils()": "EntityUtils", "getById(Collection, Class, int)": "getById"}, "ClassType": "Class"}, "CallMonitoringAspect": {"classVar": {"enabled": {"Var": "boolean", "CoreType": ["boolean"], "VarAST": {"name": "boolean", "dimensions": []}, "Start": 584, "End": 599, "modifier": ["private"], "RawStr": "private boolean enabled = true;"}, "callCount": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 621, "End": 634, "modifier": ["private"], "RawStr": "private int callCount = 0;"}, "accumulatedCallTime": {"Var": "long", "CoreType": ["long"], "VarAST": {"name": "long", "dimensions": []}, "Start": 653, "End": 677, "modifier": ["private"], "RawStr": "private long accumulatedCallTime = 0;"}}, "funcL": {"isEnabled": {"RetType": "boolean", "RetCoreType": ["boolean"], "RetTypeAST": {"name": "boolean", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@ManagedAttribute\n    public boolean isEnabled() {", "rawEnd": 30, "signature": "isEnabled()"}, "setEnabled": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"enabled": {"Type": "boolean", "CoreType": ["boolean"], "TypeAST": {"name": "boolean", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@ManagedAttribute\n    public void setEnabled(boolean enabled) {", "rawEnd": 38, "signature": "setEnabled(boolean)"}, "reset": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@ManagedOperation\n    public void reset() {", "rawEnd": 72, "signature": "reset()"}, "getCallCount": {"RetType": "int", "RetCoreType": ["int"], "RetTypeAST": {"name": "int", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@ManagedAttribute\n    public int getCallCount() {", "rawEnd": 32, "signature": "getCallCount()"}, "getCallTime": {"RetType": "long", "RetCoreType": ["long"], "RetTypeAST": {"name": "long", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@ManagedAttribute\n    public long getCallTime() {", "rawEnd": 135, "signature": "getCallTime()"}, "invoke": {"RetType": "Object", "RetCoreType": ["Object"], "RetTypeAST": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": ["Throwable"], "Args": {"joinPoint": {"Type": "ProceedingJoinPoint", "CoreType": ["ProceedingJoinPoint"], "TypeAST": {"name": "ProceedingJoinPoint", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"sw": {"Var": "StopWatch", "CoreType": ["StopWatch"], "VarAST": {"name": "StopWatch", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1429, "End": 1441, "RawStr": "StopWatch sw = new StopWatch(joinPoint.toShortString());"}}, "modifier": ["public"], "header": "@Around(\"within(@org.springframework.stereotype.Repository *)\")\n    public Object invoke(ProceedingJoinPoint joinPoint) throws Throwable {", "rawEnd": 497, "signature": "invoke(ProceedingJoinPoint)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/util/CallMonitoringAspect.java", "super": null, "modifier": ["public"], "header": "/**\n * Simple aspect that monitors call count and call invocation time. It uses JMX annotations and therefore can be\n * monitored using any JMX console such as the jConsole\n * <p/>\n * This is only useful if you use JPA or JDBC.  Spring-data-jpa doesn't have any correctly annotated classes to join on\n *\n * @author Rob Harrop\n * @author Juergen Hoeller\n * @author Michael Isvy\n * @since 2.5\n */\n@ManagedResource(\"petclinic:type=CallMonitor\")\n@Aspect\npublic class CallMonitoringAspect {", "rawEnd": 1348, "Enum": [], "FQCN": "org.springframework.samples.petclinic.util.CallMonitoringAspect", "Jparser": "org.springframework.samples.petclinic.util.CallMonitoringAspect", "funcSig": {"isEnabled()": "isEnabled", "setEnabled(boolean)": "setEnabled", "reset()": "reset", "getCallCount()": "getCallCount", "getCallTime()": "getCallTime", "invoke(ProceedingJoinPoint)": "invoke"}, "ClassType": "Class"}, "ClinicServiceImpl": {"classVar": {"petRepository": {"Var": "PetRepository", "CoreType": ["PetRepository"], "VarAST": {"name": "PetRepository", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1029, "End": 1056, "modifier": ["private"], "RawStr": "private PetRepository petRepository;"}, "vetRepository": {"Var": "VetRepository", "CoreType": ["VetRepository"], "VarAST": {"name": "VetRepository", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1070, "End": 1097, "modifier": ["private"], "RawStr": "private VetRepository vetRepository;"}, "ownerRepository": {"Var": "OwnerRepository", "CoreType": ["OwnerRepository"], "VarAST": {"name": "OwnerRepository", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1111, "End": 1142, "modifier": ["private"], "RawStr": "private OwnerRepository ownerRepository;"}, "visitRepository": {"Var": "VisitRepository", "CoreType": ["VisitRepository"], "VarAST": {"name": "VisitRepository", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1156, "End": 1187, "modifier": ["private"], "RawStr": "private VisitRepository visitRepository;"}}, "funcL": {"ClinicServiceImpl": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"petRepository": {"Type": "PetRepository", "CoreType": ["PetRepository"], "TypeAST": {"name": "PetRepository", "dimensions": [], "arguments": null, "sub_type": null}}, "vetRepository": {"Type": "VetRepository", "CoreType": ["VetRepository"], "TypeAST": {"name": "VetRepository", "dimensions": [], "arguments": null, "sub_type": null}}, "ownerRepository": {"Type": "OwnerRepository", "CoreType": ["OwnerRepository"], "TypeAST": {"name": "OwnerRepository", "dimensions": [], "arguments": null, "sub_type": null}}, "visitRepository": {"Type": "VisitRepository", "CoreType": ["VisitRepository"], "TypeAST": {"name": "VisitRepository", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public ClinicServiceImpl(PetRepository petRepository, VetRepository vetRepository, OwnerRepository ownerRepository, VisitRepository visitRepository) {", "rawEnd": 190, "signature": "ClinicServiceImpl(PetRepository, VetRepository, OwnerRepository, VisitRepository)"}, "findPetTypes": {"RetType": "Collection<PetType>", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional(readOnly = true)\n    public Collection<PetType> findPetTypes() {", "rawEnd": 51, "signature": "findPetTypes()"}, "findOwnerById": {"RetType": "Owner", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"id": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional(readOnly = true)\n    public Owner findOwnerById(int id) {", "rawEnd": 51, "signature": "findOwnerById(int)"}, "findOwnerByLastName": {"RetType": "Collection<Owner>", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {"lastName": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional(readOnly = true)\n    public Collection<Owner> findOwnerByLastName(String lastName) {", "rawEnd": 63, "signature": "findOwnerByLastName(String)"}, "saveOwner": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional\n    public void saveOwner(Owner owner) {", "rawEnd": 43, "signature": "saveOwner(Owner)"}, "saveVisit": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"visit": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional\n    public void saveVisit(Visit visit) {", "rawEnd": 43, "signature": "saveVisit(Visit)"}, "findPetById": {"RetType": "Pet", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"id": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional(readOnly = true)\n    public Pet findPetById(int id) {", "rawEnd": 49, "signature": "findPetById(int)"}, "savePet": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional\n    public void savePet(Pet pet) {", "rawEnd": 39, "signature": "savePet(Pet)"}, "findVets": {"RetType": "Collection<Vet>", "RetCoreType": ["Vet"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @Transactional(readOnly = true)\n    @Cacheable(value = \"vets\")\n    public Collection<Vet> findVets() {", "rawEnd": 46, "signature": "findVets()"}, "findVisitsByPetId": {"RetType": "Collection<Visit>", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n\tpublic Collection<Visit> findVisitsByPetId(int petId) {", "rawEnd": 48, "signature": "findVisitsByPetId(int)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/service/ClinicServiceImpl.java", "super": {"implements": {"impl_start": 1000, "values": ["ClinicService"]}}, "modifier": ["public"], "header": "/**\n * Mostly used as a facade for all Petclinic controllers\n * Also a placeholder for @Transactional and @Cacheable annotations\n *\n * @author Michael Isvy\n */\n@Service\npublic class ClinicServiceImpl implements ClinicService {", "rawEnd": 1781, "Enum": [], "FQCN": "org.springframework.samples.petclinic.service.ClinicServiceImpl", "Jparser": "org.springframework.samples.petclinic.service.ClinicServiceImpl", "funcSig": {"ClinicServiceImpl(PetRepository, VetRepository, OwnerRepository, VisitRepository)": "ClinicServiceImpl", "findPetTypes()": "findPetTypes", "findOwnerById(int)": "findOwnerById", "findOwnerByLastName(String)": "findOwnerByLastName", "saveOwner(Owner)": "saveOwner", "saveVisit(Visit)": "saveVisit", "findPetById(int)": "findPetById", "savePet(Pet)": "savePet", "findVets()": "findVets", "findVisitsByPetId(int)": "findVisitsByPetId"}, "ClassType": "Class"}, "JdbcVetRepositoryImpl": {"classVar": {"jdbcTemplate": {"Var": "JdbcTemplate", "CoreType": ["JdbcTemplate"], "VarAST": {"name": "JdbcTemplate", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 822, "End": 847, "modifier": ["private"], "RawStr": "private JdbcTemplate jdbcTemplate;"}}, "funcL": {"JdbcVetRepositoryImpl": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"jdbcTemplate": {"Type": "JdbcTemplate", "CoreType": ["JdbcTemplate"], "TypeAST": {"name": "JdbcTemplate", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public JdbcVetRepositoryImpl(JdbcTemplate jdbcTemplate) {", "rawEnd": 48, "signature": "JdbcVetRepositoryImpl(JdbcTemplate)"}, "findAll": {"RetType": "Collection<Vet>", "RetCoreType": ["Vet"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"specialty": {"Var": "Specialty", "CoreType": ["Specialty"], "VarAST": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2046, "End": 2065, "RawStr": "Specialty specialty = EntityUtils.getById(specialties, Specialty.class, specialtyId);"}, "vets": {"Var": "List<Vet>", "CoreType": ["Vet"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1069, "End": 1083, "RawStr": "List<Vet> vets = new ArrayList<>();"}, "specialties": {"Var": "List<Specialty>", "CoreType": ["Specialty"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Specialty", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1337, "End": 1364, "RawStr": "// Retrieve the list of all possible specialties.\n        final List<Specialty> specialties = this.jdbcTemplate.query(\n            \"SELECT id, name FROM specialties\",\n            BeanPropertyRowMapper.newInstance(Specialty.class));"}, "vetSpecialtiesIds": {"Var": "List<Integer>", "CoreType": ["Integer"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1583, "End": 1614, "RawStr": "final List<Integer> vetSpecialtiesIds = this.jdbcTemplate.query(\n                \"SELECT specialty_id FROM vet_specialties WHERE vet_id=?\",\n                new BeanPropertyRowMapper<Integer>() {\n                    @Override\n                    public Integer mapRow(ResultSet rs, int row) throws SQLException {\n                        return rs.getInt(1);\n                    }\n                },\n                vet.getId());"}}, "modifier": ["public"], "header": "/**\n     * Refresh the cache of Vets that the ClinicService is holding.\n     */\n    @Override\n    public Collection<Vet> findAll() {", "rawEnd": 1295, "signature": "findAll()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVetRepositoryImpl.java", "super": {"implements": {"impl_start": 793, "values": ["VetRepository"]}}, "modifier": ["public"], "header": "/**\n * A simple JDBC-based implementation of the {@link VetRepository} interface.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Rob Harrop\n * @author Sam Brannen\n * @author Thomas Risberg\n * @author Mark Fisher\n * @author Michael Isvy\n */\n@Repository\npublic class JdbcVetRepositoryImpl implements VetRepository {", "rawEnd": 1601, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl", "funcSig": {"JdbcVetRepositoryImpl(JdbcTemplate)": "JdbcVetRepositoryImpl", "findAll()": "findAll"}, "ClassType": "Class"}, "JdbcVisitRowMapper": {"classVar": {}, "funcL": {"mapRow": {"RetType": "Visit", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": ["SQLException"], "Args": {"rs": {"Type": "ResultSet", "CoreType": ["ResultSet"], "TypeAST": {"name": "ResultSet", "dimensions": [], "arguments": null, "sub_type": null}}, "row": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"visit": {"Var": "Visit", "CoreType": ["Visit"], "VarAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 461, "End": 472, "RawStr": "Visit visit = new Visit();"}}, "modifier": ["public"], "header": "@Override\n    public Visit mapRow(ResultSet rs, int row) throws SQLException {", "rawEnd": 234, "signature": "mapRow(ResultSet, int)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRowMapper.java", "super": {"implements": {"impl_start": 350, "values": ["RowMapper"]}}, "modifier": ["private"], "header": "/**\n * {@link RowMapper} implementation mapping data from a {@link ResultSet} to the corresponding properties\n * of the {@link Visit} class.\n */\nclass JdbcVisitRowMapper implements RowMapper<Visit> {", "rawEnd": 320, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper", "funcSig": {"mapRow(ResultSet, int)": "mapRow"}, "ClassType": "Class"}, "JdbcPetRepositoryImpl": {"classVar": {"namedParameterJdbcTemplate": {"Var": "NamedParameterJdbcTemplate", "CoreType": ["NamedParameterJdbcTemplate"], "VarAST": {"name": "NamedParameterJdbcTemplate", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1200, "End": 1253, "modifier": ["private"], "RawStr": "private NamedParameterJdbcTemplate namedParameterJdbcTemplate;"}, "insertPet": {"Var": "SimpleJdbcInsert", "CoreType": ["SimpleJdbcInsert"], "VarAST": {"name": "SimpleJdbcInsert", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1268, "End": 1294, "modifier": ["private"], "RawStr": "private SimpleJdbcInsert insertPet;"}, "ownerRepository": {"Var": "OwnerRepository", "CoreType": ["OwnerRepository"], "VarAST": {"name": "OwnerRepository", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1309, "End": 1340, "modifier": ["private"], "RawStr": "private OwnerRepository ownerRepository;"}}, "funcL": {"JdbcPetRepositoryImpl": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataSource": {"Type": "DataSource", "CoreType": ["DataSource"], "TypeAST": {"name": "DataSource", "dimensions": [], "arguments": null, "sub_type": null}}, "ownerRepository": {"Type": "OwnerRepository", "CoreType": ["OwnerRepository"], "TypeAST": {"name": "OwnerRepository", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public JdbcPetRepositoryImpl(DataSource dataSource, OwnerRepository ownerRepository) {", "rawEnd": 280, "signature": "JdbcPetRepositoryImpl(DataSource, OwnerRepository)"}, "findPetTypes": {"RetType": "List<PetType>", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {"params": {"Var": "Map<String, Object>", "CoreType": ["String", "Object"], "VarAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1836, "End": 1862, "RawStr": "Map<String, Object> params = new HashMap<>();"}}, "modifier": ["public"], "header": "@Override\n    public List<PetType> findPetTypes() {", "rawEnd": 253, "signature": "findPetTypes()"}, "findById": {"RetType": "Pet", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"id": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"ownerId": {"Var": "Integer", "CoreType": ["Integer"], "VarAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2122, "End": 2137, "RawStr": "Integer ownerId;"}, "owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2530, "End": 2541, "RawStr": "Owner owner = this.ownerRepository.findById(ownerId);"}, "params": {"Var": "Map<String, Object>", "CoreType": ["String", "Object"], "VarAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 2165, "End": 2191, "RawStr": "Map<String, Object> params = new HashMap<>();"}}, "modifier": ["public"], "header": "@Override\n    public Pet findById(int id) {", "rawEnd": 536, "signature": "findById(int)"}, "save": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"newKey": {"Var": "Number", "CoreType": ["Number"], "VarAST": {"name": "Number", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2744, "End": 2757, "RawStr": "Number newKey = this.insertPet.executeAndReturnKey(\n                createPetParameterSource(pet));"}}, "modifier": ["public"], "header": "@Override\n    public void save(Pet pet) {", "rawEnd": 460, "signature": "save(Pet)"}, "createPetParameterSource": {"RetType": "MapSqlParameterSource", "RetCoreType": ["MapSqlParameterSource"], "RetTypeAST": {"name": "MapSqlParameterSource", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["private"], "header": "/**\n     * Creates a {@link MapSqlParameterSource} based on data values from the supplied {@link Pet} instance.\n     */\n    private MapSqlParameterSource createPetParameterSource(Pet pet) {", "rawEnd": 306, "signature": "createPetParameterSource(Pet)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRepositoryImpl.java", "super": {"implements": {"impl_start": 1171, "values": ["PetRepository"]}}, "modifier": ["public"], "header": "/**\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Rob Harrop\n * @author Sam Brannen\n * @author Thomas Risberg\n * @author Mark Fisher\n */\n@Repository\npublic class JdbcPetRepositoryImpl implements PetRepository {", "rawEnd": 2448, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl", "funcSig": {"JdbcPetRepositoryImpl(DataSource, OwnerRepository)": "JdbcPetRepositoryImpl", "findPetTypes()": "findPetTypes", "findById(int)": "findById", "save(Pet)": "save", "createPetParameterSource(Pet)": "createPetParameterSource"}, "ClassType": "Class"}, "JdbcPetVisitExtractor": {"classVar": {}, "funcL": {"JdbcPetVisitExtractor": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public JdbcPetVisitExtractor() {", "rawEnd": 71, "signature": "JdbcPetVisitExtractor()"}, "mapPrimaryKey": {"RetType": "Integer", "RetCoreType": ["Integer"], "RetTypeAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": ["SQLException"], "Args": {"rs": {"Type": "ResultSet", "CoreType": ["ResultSet"], "TypeAST": {"name": "ResultSet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "@Override\n    protected Integer mapPrimaryKey(ResultSet rs) throws SQLException {", "rawEnd": 43, "signature": "mapPrimaryKey(ResultSet)"}, "mapForeignKey": {"RetType": "Integer", "RetCoreType": ["Integer"], "RetTypeAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": ["SQLException"], "Args": {"rs": {"Type": "ResultSet", "CoreType": ["ResultSet"], "TypeAST": {"name": "ResultSet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "@Override\n    protected Integer mapForeignKey(ResultSet rs) throws SQLException {", "rawEnd": 158, "signature": "mapForeignKey(ResultSet)"}, "addChild": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"root": {"Type": "JdbcPet", "CoreType": ["JdbcPet"], "TypeAST": {"name": "JdbcPet", "dimensions": [], "arguments": null, "sub_type": null}}, "child": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["protected"], "header": "@Override\n    protected void addChild(JdbcPet root, Visit child) {", "rawEnd": 36, "signature": "addChild(JdbcPet, Visit)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetVisitExtractor.java", "super": {"extends": {"ext_start": 341, "values": ["OneToManyResultSetExtractor"], "CoreType": [["OneToManyResultSetExtractor"]]}}, "modifier": ["public"], "header": "/**\n * {@link ResultSetExtractor} implementation by using the\n * {@link OneToManyResultSetExtractor} of Spring Data Core JDBC Extensions.\n */\npublic class JdbcPetVisitExtractor extends\n    OneToManyResultSetExtractor<JdbcPet, Visit, Integer> {", "rawEnd": 594, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor", "funcSig": {"JdbcPetVisitExtractor()": "JdbcPetVisitExtractor", "mapPrimaryKey(ResultSet)": "mapPrimaryKey", "mapForeignKey(ResultSet)": "mapForeignKey", "addChild(JdbcPet, Visit)": "addChild"}, "ClassType": "Class"}, "JdbcPetRowMapper": {"classVar": {}, "funcL": {"mapRow": {"RetType": "JdbcPet", "RetCoreType": ["JdbcPet"], "RetTypeAST": {"name": "JdbcPet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": ["SQLException"], "Args": {"rs": {"Type": "ResultSet", "CoreType": ["ResultSet"], "TypeAST": {"name": "ResultSet", "dimensions": [], "arguments": null, "sub_type": null}}, "rownum": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"pet": {"Var": "JdbcPet", "CoreType": ["JdbcPet"], "VarAST": {"name": "JdbcPet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 407, "End": 418, "RawStr": "JdbcPet pet = new JdbcPet();"}}, "modifier": ["public"], "header": "@Override\n    public JdbcPet mapRow(ResultSet rs, int rownum) throws SQLException {", "rawEnd": 310, "signature": "mapRow(ResultSet, int)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRowMapper.java", "super": {"implements": {"impl_start": 289, "values": ["RowMapper"]}}, "modifier": ["private"], "header": "/**\n * {@link RowMapper} implementation mapping data from a {@link ResultSet} to the corresponding properties\n * of the {@link JdbcPet} class.\n */\nclass JdbcPetRowMapper implements RowMapper<JdbcPet> {", "rawEnd": 401, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper", "funcSig": {"mapRow(ResultSet, int)": "mapRow"}, "ClassType": "Class"}, "OneToManyResultSetExtractor": {"classVar": {"expectedResults": {"Var": "ExpectedResults", "CoreType": ["ExpectedResults"], "VarAST": {"name": "ExpectedResults", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 657, "End": 688, "modifier": ["protected", "final"], "RawStr": "protected final ExpectedResults expectedResults;"}, "rootMapper": {"Var": "RowMapper<R>", "CoreType": ["RowMapper", "R"], "VarAST": {"name": "RowMapper", "dimensions": [], "arguments": [{"type": {"name": "R", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 707, "End": 730, "modifier": ["protected", "final"], "RawStr": "protected final RowMapper<R> rootMapper;"}, "childMapper": {"Var": "RowMapper<C>", "CoreType": ["RowMapper", "C"], "VarAST": {"name": "RowMapper", "dimensions": [], "arguments": [{"type": {"name": "C", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 749, "End": 773, "modifier": ["protected", "final"], "RawStr": "protected final RowMapper<C> childMapper;"}}, "funcL": {"OneToManyResultSetExtractor [overloaded_#001]": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"rootMapper": {"Type": "RowMapper<R>", "CoreType": ["RowMapper", "R"], "TypeAST": {"name": "RowMapper", "dimensions": [], "arguments": [{"type": {"name": "R", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}, "childMapper": {"Type": "RowMapper<C>", "CoreType": ["RowMapper", "C"], "TypeAST": {"name": "RowMapper", "dimensions": [], "arguments": [{"type": {"name": "C", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n\t * Creates a new {@link OneToManyResultSetExtractor} from the given {@link RowMapper}s.\n\t *\n\t * @param rootMapper {@link RowMapper} to map the root entity, must not be {@literal null}.\n\t * @param childMapper {@link RowMapper} to map the root entities, must not be {@literal null}.\n\t */\n\tpublic OneToManyResultSetExtractor(RowMapper<R> rootMapper, RowMapper<C> childMapper) {", "rawEnd": 42, "signature": "OneToManyResultSetExtractor(RowMapper, RowMapper)"}, "OneToManyResultSetExtractor [overloaded_#002]": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"rootMapper": {"Type": "RowMapper<R>", "CoreType": ["RowMapper", "R"], "TypeAST": {"name": "RowMapper", "dimensions": [], "arguments": [{"type": {"name": "R", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}, "childMapper": {"Type": "RowMapper<C>", "CoreType": ["RowMapper", "C"], "TypeAST": {"name": "RowMapper", "dimensions": [], "arguments": [{"type": {"name": "C", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}, "expectedResults": {"Type": "ExpectedResults", "CoreType": ["ExpectedResults"], "TypeAST": {"name": "ExpectedResults", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "/**\n\t * Creates a new {@link OneToManyResultSetExtractor} from the given {@link RowMapper}s and {@link ExpectedResults}.\n\t *\n\t * @param rootMapper {@link RowMapper} to map the root entity, must not be {@literal null}.\n\t * @param childMapper {@link RowMapper} to map the root entities, must not be {@literal null}.\n\t * @param expectedResults\n\t */\n\tpublic OneToManyResultSetExtractor(RowMapper<R> rootMapper, RowMapper<C> childMapper, ExpectedResults expectedResults) {", "rawEnd": 295, "signature": "OneToManyResultSetExtractor(RowMapper, RowMapper, ExpectedResults)"}, "extractData": {"RetType": "List<R>", "RetCoreType": ["R"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "R", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": ["SQLException"], "Args": {"rs": {"Type": "ResultSet", "CoreType": ["ResultSet"], "TypeAST": {"name": "ResultSet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"row": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 1473, "End": 1480, "RawStr": "int row = 0;"}, "more": {"Var": "boolean", "CoreType": ["boolean"], "VarAST": {"name": "boolean", "dimensions": []}, "Start": 1488, "End": 1500, "RawStr": "boolean more = rs.next();"}, "root": {"Var": "R", "CoreType": ["R"], "VarAST": {"name": "R", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1562, "End": 1568, "RawStr": "R root = rootMapper.mapRow(rs, row);"}, "primaryKey": {"Var": "K", "CoreType": ["K"], "VarAST": {"name": "K", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1602, "End": 1614, "RawStr": "K primaryKey = mapPrimaryKey(rs);"}, "results": {"Var": "List<R>", "CoreType": ["R"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "R", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1433, "End": 1448, "RawStr": "List<R> results = new ArrayList<R>();"}}, "modifier": ["public"], "header": "public List<R> extractData(ResultSet rs) throws SQLException {", "rawEnd": 957, "signature": "extractData(ResultSet)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/OneToManyResultSetExtractor.java", "super": {"implements": {"impl_start": 517, "values": ["ResultSetExtractor"]}}, "modifier": ["public", "abstract"], "header": "/**\n * An abstract results extractor for row mapping operations that map multiple rows to a single root object. This is\n * useful when joining a one-to-many relationship where there can be multiple child rows returned per parent root.\n * <p>\n * It's assumed that the root type R table has a primary key (id) of type K and that the child type C table has a\n * foreign key of type K referencing the root table's primary key.\n * <p>\n * For example, consider the relationship: \"a Customer has one-to-many Addresses\". When joining the Customer table with\n * the Address table to build a Customer object, multiple rows would be returned for a Customer if it has more than one\n * Address. This extractor is useful in that case.\n * <p>\n * This class comes from the Spring Data JDBC Extensions project that has been archived in 2019:\n * https://github.com/spring-projects/spring-data-jdbc-ext\n *\n * @author Thomas Risberg\n * @author Keith Donald\n * @author Oliver Gierke\n * @since 1.0\n */\npublic abstract class OneToManyResultSetExtractor<R, C, K> implements ResultSetExtractor<List<R>> {", "rawEnd": 3478, "Enum": [{"Label": "ExpectedResults", "Header": "public enum ExpectedResults {\n\t\tANY,\n\t\tONE_AND_ONLY_ONE,\n\t\tONE_OR_NONE,\n\t\tAT_LEAST_ONE\n\t}"}], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "funcSig": {"OneToManyResultSetExtractor(RowMapper, RowMapper)": "OneToManyResultSetExtractor [overloaded_#001]", "OneToManyResultSetExtractor(RowMapper, RowMapper, ExpectedResults)": "OneToManyResultSetExtractor [overloaded_#002]", "extractData(ResultSet)": "extractData"}, "ClassType": "Class"}, "JdbcPet": {"classVar": {"typeId": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 218, "End": 228, "modifier": ["private"], "RawStr": "private int typeId;"}, "ownerId": {"Var": "int", "CoreType": ["int"], "VarAST": {"name": "int", "dimensions": []}, "Start": 243, "End": 254, "modifier": ["private"], "RawStr": "private int ownerId;"}}, "funcL": {"getTypeId": {"RetType": "int", "RetCoreType": ["int"], "RetTypeAST": {"name": "int", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public int getTypeId() {", "rawEnd": 34, "signature": "getTypeId()"}, "setTypeId": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"typeId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "public void setTypeId(int typeId) {", "rawEnd": 36, "signature": "setTypeId(int)"}, "getOwnerId": {"RetType": "int", "RetCoreType": ["int"], "RetTypeAST": {"name": "int", "dimensions": []}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public int getOwnerId() {", "rawEnd": 35, "signature": "getOwnerId()"}, "setOwnerId": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"ownerId": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "public void setOwnerId(int ownerId) {", "rawEnd": 38, "signature": "setOwnerId(int)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPet.java", "super": {"extends": {"ext_start": 199, "values": ["Pet"], "CoreType": [["Pet"]]}}, "modifier": ["private"], "header": "/**\n * Subclass of Pet that carries temporary id properties which are only relevant for a JDBC implementation of the\n * PetRepository.\n *\n * @author Juergen Hoeller\n */\nclass JdbcPet extends Pet {", "rawEnd": 342, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "funcSig": {"getTypeId()": "getTypeId", "setTypeId(int)": "setTypeId", "getOwnerId()": "getOwnerId", "setOwnerId(int)": "setOwnerId"}, "ClassType": "Class"}, "JdbcOwnerRepositoryImpl": {"classVar": {"namedParameterJdbcTemplate": {"Var": "NamedParameterJdbcTemplate", "CoreType": ["NamedParameterJdbcTemplate"], "VarAST": {"name": "NamedParameterJdbcTemplate", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1229, "End": 1282, "modifier": ["private"], "RawStr": "private NamedParameterJdbcTemplate namedParameterJdbcTemplate;"}, "insertOwner": {"Var": "SimpleJdbcInsert", "CoreType": ["SimpleJdbcInsert"], "VarAST": {"name": "SimpleJdbcInsert", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1297, "End": 1325, "modifier": ["private"], "RawStr": "private SimpleJdbcInsert insertOwner;"}}, "funcL": {"JdbcOwnerRepositoryImpl": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataSource": {"Type": "DataSource", "CoreType": ["DataSource"], "TypeAST": {"name": "DataSource", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public JdbcOwnerRepositoryImpl(DataSource dataSource) {", "rawEnd": 237, "signature": "JdbcOwnerRepositoryImpl(DataSource)"}, "findByLastName": {"RetType": "Collection<Owner>", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {"lastName": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"params": {"Var": "Map<String, Object>", "CoreType": ["String", "Object"], "VarAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1799, "End": 1825, "RawStr": "Map<String, Object> params = new HashMap<>();"}, "owners": {"Var": "List<Owner>", "CoreType": ["Owner"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 1940, "End": 1958, "RawStr": "List<Owner> owners = this.namedParameterJdbcTemplate.query(\n            \"SELECT id, first_name, last_name, address, city, telephone FROM owners WHERE last_name like :lastName\",\n            params,\n            BeanPropertyRowMapper.newInstance(Owner.class)\n        );"}}, "modifier": ["public"], "header": "/**\n     * Loads {@link Owner Owners} from the data store by last name, returning all owners whose last name <i>starts</i> with\n     * the given name; also loads the {@link Pet Pets} and {@link Visit Visits} for the corresponding owners, if not\n     * already loaded.\n     */\n    @Override\n    public Collection<Owner> findByLastName(String lastName) {", "rawEnd": 447, "signature": "findByLastName(String)"}, "findById": {"RetType": "Owner", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"id": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"owner": {"Var": "Owner", "CoreType": ["Owner"], "VarAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2291, "End": 2302, "RawStr": "Owner owner;"}, "params": {"Var": "Map<String, Object>", "CoreType": ["String", "Object"], "VarAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 2330, "End": 2356, "RawStr": "Map<String, Object> params = new HashMap<>();"}}, "modifier": ["public"], "header": "/**\n     * Loads the {@link Owner} with the supplied <code>id</code>; also loads the {@link Pet Pets} and {@link Visit Visits}\n     * for the corresponding owner, if not already loaded.\n     */\n    @Override\n    public Owner findById(int id) {", "rawEnd": 599, "signature": "findById(int)"}, "loadPetsAndVisits": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"params": {"Var": "Map<String, Object>", "CoreType": ["String", "Object"], "VarAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 2908, "End": 2934, "RawStr": "Map<String, Object> params = new HashMap<>();"}, "pets": {"Var": "List<JdbcPet>", "CoreType": ["JdbcPet"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "JdbcPet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 3031, "End": 3049, "RawStr": "final List<JdbcPet> pets = this.namedParameterJdbcTemplate.query(\n            \"SELECT pets.id, name, birth_date, type_id, owner_id, visits.id as visit_id, visit_date, description, pet_id FROM pets LEFT OUTER JOIN visits ON pets.id = pet_id WHERE owner_id=:id ORDER BY pet_id\",\n            params,\n            new JdbcPetVisitExtractor()\n        );"}, "petTypes": {"Var": "Collection<PetType>", "CoreType": ["PetType"], "VarAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 3210, "End": 3238, "RawStr": "Collection<PetType> petTypes = getPetTypes();"}}, "modifier": ["public"], "header": "public void loadPetsAndVisits(final Owner owner) {", "rawEnd": 675, "signature": "loadPetsAndVisits(Owner)"}, "save": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"parameterSource": {"Var": "BeanPropertySqlParameterSource", "CoreType": ["BeanPropertySqlParameterSource"], "VarAST": {"name": "BeanPropertySqlParameterSource", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3485, "End": 3531, "RawStr": "BeanPropertySqlParameterSource parameterSource = new BeanPropertySqlParameterSource(owner);"}, "newKey": {"Var": "Number", "CoreType": ["Number"], "VarAST": {"name": "Number", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 3618, "End": 3631, "RawStr": "Number newKey = this.insertOwner.executeAndReturnKey(parameterSource);"}}, "modifier": ["public"], "header": "@Override\n    public void save(Owner owner) {", "rawEnd": 545, "signature": "save(Owner)"}, "getPetTypes": {"RetType": "Collection<PetType>", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "public Collection<PetType> getPetTypes() {", "rawEnd": 210, "signature": "getPetTypes()"}, "loadOwnersPetsAndVisits": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"owners": {"Type": "List<Owner>", "CoreType": ["Owner"], "TypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}}}, "Locals": {}, "modifier": ["private"], "header": "/**\n     * Loads the {@link Pet} and {@link Visit} data for the supplied {@link List} of {@link Owner Owners}.\n     *\n     * @param owners the list of owners for whom the pet and visit data should be loaded\n     * @see #loadPetsAndVisits(Owner)\n     */\n    private void loadOwnersPetsAndVisits(List<Owner> owners) {", "rawEnd": 91, "signature": "loadOwnersPetsAndVisits(List)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcOwnerRepositoryImpl.java", "super": {"implements": {"impl_start": 1198, "values": ["OwnerRepository"]}}, "modifier": ["public"], "header": "/**\n * A simple JDBC-based implementation of the {@link OwnerRepository} interface.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Rob Harrop\n * @author Sam Brannen\n * @author Thomas Risberg\n * @author Mark Fisher\n * @author Antoine Rey\n */\n@Repository\npublic class JdbcOwnerRepositoryImpl implements OwnerRepository {", "rawEnd": 4079, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl", "funcSig": {"JdbcOwnerRepositoryImpl(DataSource)": "JdbcOwnerRepositoryImpl", "findByLastName(String)": "findByLastName", "findById(int)": "findById", "loadPetsAndVisits(Owner)": "loadPetsAndVisits", "save(Owner)": "save", "getPetTypes()": "getPetTypes", "loadOwnersPetsAndVisits(List)": "loadOwnersPetsAndVisits"}, "ClassType": "Class"}, "JdbcVisitRepositoryImpl": {"classVar": {"jdbcTemplate": {"Var": "NamedParameterJdbcTemplate", "CoreType": ["NamedParameterJdbcTemplate"], "VarAST": {"name": "NamedParameterJdbcTemplate", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 767, "End": 806, "modifier": ["private"], "RawStr": "private NamedParameterJdbcTemplate jdbcTemplate;"}, "insertVisit": {"Var": "SimpleJdbcInsert", "CoreType": ["SimpleJdbcInsert"], "VarAST": {"name": "SimpleJdbcInsert", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 821, "End": 849, "modifier": ["private"], "RawStr": "private SimpleJdbcInsert insertVisit;"}}, "funcL": {"JdbcVisitRepositoryImpl": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"dataSource": {"Type": "DataSource", "CoreType": ["DataSource"], "TypeAST": {"name": "DataSource", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Autowired\n    public JdbcVisitRepositoryImpl(DataSource dataSource) {", "rawEnd": 221, "signature": "JdbcVisitRepositoryImpl(DataSource)"}, "save": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"visit": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"newKey": {"Var": "Number", "CoreType": ["Number"], "VarAST": {"name": "Number", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1281, "End": 1294, "RawStr": "Number newKey = this.insertVisit.executeAndReturnKey(\n                createVisitParameterSource(visit));"}}, "modifier": ["public"], "header": "@Override\n    public void save(Visit visit) {", "rawEnd": 307, "signature": "save(Visit)"}, "createVisitParameterSource": {"RetType": "MapSqlParameterSource", "RetCoreType": ["MapSqlParameterSource"], "RetTypeAST": {"name": "MapSqlParameterSource", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"visit": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["private"], "header": "/**\n     * Creates a {@link MapSqlParameterSource} based on data values from the supplied {@link Visit} instance.\n     */\n    private MapSqlParameterSource createVisitParameterSource(Visit visit) {", "rawEnd": 263, "signature": "createVisitParameterSource(Visit)"}, "findByPetId": {"RetType": "List<Visit>", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "Integer", "CoreType": ["Integer"], "TypeAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"pet": {"Var": "JdbcPet", "CoreType": ["JdbcPet"], "VarAST": {"name": "JdbcPet", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 2169, "End": 2180, "RawStr": "JdbcPet pet = this.jdbcTemplate.queryForObject(\n                \"SELECT id, name, birth_date, type_id, owner_id FROM pets WHERE id=:id\",\n                params,\n                new JdbcPetRowMapper());"}, "params": {"Var": "Map<String, Object>", "CoreType": ["String", "Object"], "VarAST": {"name": "Map", "dimensions": [], "arguments": [{"type": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}, {"type": {"name": "Object", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 2060, "End": 2086, "RawStr": "Map<String, Object> params = new HashMap<>();"}, "visits": {"Var": "List<Visit>", "CoreType": ["Visit"], "VarAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Start": 2335, "End": 2353, "RawStr": "List<Visit> visits = this.jdbcTemplate.query(\n            \"SELECT id as visit_id, visit_date, description FROM visits WHERE pet_id=:id\",\n            params, new JdbcVisitRowMapper());"}}, "modifier": ["public"], "header": "@Override\n    public List<Visit> findByPetId(Integer petId) {", "rawEnd": 598, "signature": "findByPetId(Integer)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRepositoryImpl.java", "super": {"implements": {"impl_start": 736, "values": ["VisitRepository"]}}, "modifier": ["public"], "header": "/**\n * A simple JDBC-based implementation of the {@link VisitRepository} interface.\n *\n * @author Ken Krebs\n * @author Juergen Hoeller\n * @author Rob Harrop\n * @author Sam Brannen\n * @author Thomas Risberg\n * @author Mark Fisher\n * @author Michael Isvy\n */\n@Repository\npublic class JdbcVisitRepositoryImpl implements VisitRepository {", "rawEnd": 1888, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl", "funcSig": {"JdbcVisitRepositoryImpl(DataSource)": "JdbcVisitRepositoryImpl", "save(Visit)": "save", "createVisitParameterSource(Visit)": "createVisitParameterSource", "findByPetId(Integer)": "findByPetId"}, "ClassType": "Class"}, "JpaVetRepositoryImpl": {"classVar": {"em": {"Var": "EntityManager", "CoreType": ["EntityManager"], "VarAST": {"name": "EntityManager", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 522, "End": 538, "modifier": ["private"], "RawStr": "@PersistenceContext\n    private EntityManager em;"}}, "funcL": {"findAll": {"RetType": "Collection<Vet>", "RetCoreType": ["Vet"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Vet", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @SuppressWarnings(\"unchecked\")\n    public Collection<Vet> findAll() {", "rawEnd": 163, "signature": "findAll()"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaVetRepositoryImpl.java", "super": {"implements": {"impl_start": 469, "values": ["VetRepository"]}}, "modifier": ["public"], "header": "/**\n * JPA implementation of the {@link VetRepository} interface.\n *\n * @author Mike Keith\n * @author Rod Johnson\n * @author Sam Brannen\n * @author Michael Isvy\n * @since 22.4.2006\n */\n@Repository\npublic class JpaVetRepositoryImpl implements VetRepository {", "rawEnd": 311, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl", "funcSig": {"findAll()": "findAll"}, "ClassType": "Class"}, "JpaOwnerRepositoryImpl": {"classVar": {"em": {"Var": "EntityManager", "CoreType": ["EntityManager"], "VarAST": {"name": "EntityManager", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 638, "End": 654, "modifier": ["private"], "RawStr": "@PersistenceContext\n    private EntityManager em;"}}, "funcL": {"findByLastName": {"RetType": "Collection<Owner>", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Collection", "dimensions": [], "arguments": [{"type": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {"lastName": {"Type": "String", "CoreType": ["String"], "TypeAST": {"name": "String", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"query": {"Var": "Query", "CoreType": ["Query"], "VarAST": {"name": "Query", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 881, "End": 892, "RawStr": "// using 'join fetch' because a single query should load both owners and pets\n        // using 'left join fetch' because it might happen that an owner does not have pets yet\n        Query query = this.em.createQuery(\"SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName\");"}}, "modifier": ["public"], "header": "/**\n     * Important: in the current version of this method, we load Owners with all their Pets and Visits while\n     * we do not need Visits at all and we only need one property from the Pet objects (the 'name' property).\n     * There are some ways to improve it such as:\n     * - creating a Ligtweight class (example here: https://community.jboss.org/wiki/LightweightClass)\n     * - Turning on lazy-loading and using {@link OpenSessionInViewFilter}\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Collection<Owner> findByLastName(String lastName) {", "rawEnd": 430, "signature": "findByLastName(String)"}, "findById": {"RetType": "Owner", "RetCoreType": ["Owner"], "RetTypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"id": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {"query": {"Var": "Query", "CoreType": ["Query"], "VarAST": {"name": "Query", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 1214, "End": 1225, "RawStr": "// using 'join fetch' because a single query should load both owners and pets\n        // using 'left join fetch' because it might happen that an owner does not have pets yet\n        Query query = this.em.createQuery(\"SELECT owner FROM Owner owner left join fetch owner.pets WHERE owner.id =:id\");"}}, "modifier": ["public"], "header": "@Override\n    public Owner findById(int id) {", "rawEnd": 397, "signature": "findById(int)"}, "save": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"owner": {"Type": "Owner", "CoreType": ["Owner"], "TypeAST": {"name": "Owner", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public void save(Owner owner) {", "rawEnd": 141, "signature": "save(Owner)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaOwnerRepositoryImpl.java", "super": {"implements": {"impl_start": 583, "values": ["OwnerRepository"]}}, "modifier": ["public"], "header": "/**\n * JPA implementation of the {@link OwnerRepository} interface.\n *\n * @author Mike Keith\n * @author Rod Johnson\n * @author Sam Brannen\n * @author Michael Isvy\n * @since 22.4.2006\n */\n@Repository\npublic class JpaOwnerRepositoryImpl implements OwnerRepository {", "rawEnd": 1692, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl", "funcSig": {"findByLastName(String)": "findByLastName", "findById(int)": "findById", "save(Owner)": "save"}, "ClassType": "Class"}, "JpaPetRepositoryImpl": {"classVar": {"em": {"Var": "EntityManager", "CoreType": ["EntityManager"], "VarAST": {"name": "EntityManager", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 577, "End": 593, "modifier": ["private"], "RawStr": "@PersistenceContext\n    private EntityManager em;"}}, "funcL": {"findPetTypes": {"RetType": "List<PetType>", "RetCoreType": ["PetType"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "PetType", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    @SuppressWarnings(\"unchecked\")\n    public List<PetType> findPetTypes() {", "rawEnd": 113, "signature": "findPetTypes()"}, "findById": {"RetType": "Pet", "RetCoreType": ["Pet"], "RetTypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}, "Throws": null, "Args": {"id": {"Type": "int", "CoreType": ["int"], "TypeAST": {"name": "int", "dimensions": []}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public Pet findById(int id) {", "rawEnd": 50, "signature": "findById(int)"}, "save": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"pet": {"Type": "Pet", "CoreType": ["Pet"], "TypeAST": {"name": "Pet", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public void save(Pet pet) {", "rawEnd": 134, "signature": "save(Pet)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaPetRepositoryImpl.java", "super": {"implements": {"impl_start": 524, "values": ["PetRepository"]}}, "modifier": ["public"], "header": "/**\n * JPA implementation of the {@link PetRepository} interface.\n *\n * @author Mike Keith\n * @author Rod Johnson\n * @author Sam Brannen\n * @author Michael Isvy\n * @since 22.4.2006\n */\n@Repository\npublic class JpaPetRepositoryImpl implements PetRepository {", "rawEnd": 543, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl", "funcSig": {"findPetTypes()": "findPetTypes", "findById(int)": "findById", "save(Pet)": "save"}, "ClassType": "Class"}, "JpaVisitRepositoryImpl": {"classVar": {"em": {"Var": "EntityManager", "CoreType": ["EntityManager"], "VarAST": {"name": "EntityManager", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 557, "End": 573, "modifier": ["private"], "RawStr": "@PersistenceContext\n    private EntityManager em;"}}, "funcL": {"save": {"RetType": "void", "RetCoreType": [], "RetTypeAST": "", "Throws": null, "Args": {"visit": {"Type": "Visit", "CoreType": ["Visit"], "TypeAST": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {}, "modifier": ["public"], "header": "@Override\n    public void save(Visit visit) {", "rawEnd": 140, "signature": "save(Visit)"}, "findByPetId": {"RetType": "List<Visit>", "RetCoreType": ["Visit"], "RetTypeAST": {"name": "List", "dimensions": [], "arguments": [{"type": {"name": "Visit", "dimensions": [], "arguments": null, "sub_type": null}, "pattern_type": null}], "sub_type": null}, "Throws": null, "Args": {"petId": {"Type": "Integer", "CoreType": ["Integer"], "TypeAST": {"name": "Integer", "dimensions": [], "arguments": null, "sub_type": null}}}, "Locals": {"query": {"Var": "Query", "CoreType": ["Query"], "VarAST": {"name": "Query", "dimensions": [], "arguments": null, "sub_type": null}, "Start": 891, "End": 902, "RawStr": "Query query = this.em.createQuery(\"SELECT v FROM Visit v where v.pet.id= :id\");"}}, "modifier": ["public"], "header": "@Override\n    @SuppressWarnings(\"unchecked\")\n    public List<Visit> findByPetId(Integer petId) {", "rawEnd": 173, "signature": "findByPetId(Integer)"}}, "file": "monolith/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaVisitRepositoryImpl.java", "super": {"implements": {"impl_start": 502, "values": ["VisitRepository"]}}, "modifier": ["public"], "header": "/**\n * JPA implementation of the ClinicService interface using EntityManager.\n * <p/>\n * <p>The mappings are defined in \"orm.xml\" located in the META-INF directory.\n *\n * @author Mike Keith\n * @author Rod Johnson\n * @author Sam Brannen\n * @author Michael Isvy\n * @since 22.4.2006\n */\n@Repository\npublic class JpaVisitRepositoryImpl implements VisitRepository {", "rawEnd": 526, "Enum": [], "FQCN": "org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl", "Jparser": "org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl", "funcSig": {"save(Visit)": "save", "findByPetId(Integer)": "findByPetId"}, "ClassType": "Class"}}